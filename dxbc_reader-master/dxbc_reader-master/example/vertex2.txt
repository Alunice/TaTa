//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CBUSE_UB_WORLD_MATRIX_IDX
// {
//
//   row_major float4x4 u_mtxWV;        // Offset:    0 Size:    64 [unused]
//   row_major float4x4 u_mtxVP;        // Offset:   64 Size:    64 [unused]
//   row_major float4x4 u_mtxWP;        // Offset:  128 Size:    64
//   row_major float4x4 u_mtxVW;        // Offset:  192 Size:    64 [unused]
//   row_major float4x4 u_mtxPV;        // Offset:  256 Size:    64 [unused]
//   row_major float4x4 u_mtxPW;        // Offset:  320 Size:    64 [unused]
//   row_major float4x4 u_mtxWVOld;     // Offset:  384 Size:    64 [unused]
//   row_major float4x4 u_mtxVPOld;     // Offset:  448 Size:    64 [unused]
//   row_major float4x4 u_mtxWPOld;     // Offset:  512 Size:    64
//
// }
//
// cbuffer CBUSE_UB_LOCAL_MATRIX_IDX
// {
//
//   row_major float4x4 u_mtxLW;        // Offset:    0 Size:    64
//   row_major float4x4 u_mtxLV;        // Offset:   64 Size:    64 [unused]
//   row_major float4x4 u_mtxLP;        // Offset:  128 Size:    64 [unused]
//   row_major float4x4 u_mtxLWOld;     // Offset:  192 Size:    64
//   row_major float4x4 u_mtxLVOld;     // Offset:  256 Size:    64 [unused]
//
// }
//
// cbuffer CBUSE_UB_MODEL_MATERIAL_IDX
// {
//
//   float2 u_symFlag;                  // Offset:    0 Size:     8
//   int u_meshId;                      // Offset:    8 Size:     4 [unused]
//   float u_alphaTestRef;              // Offset:   12 Size:     4 [unused]
//   float4 u_diffuse;                  // Offset:   16 Size:    16
//   float4 u_ambient;                  // Offset:   32 Size:    16 [unused]
//   float4 u_speculer;                 // Offset:   48 Size:    16 [unused]
//   row_major float2x3 u_texProj[6];   // Offset:   64 Size:   188 [unused]
//   float4 u_uvRange[6];               // Offset:  256 Size:    96 [unused]
//
// }
//
// cbuffer CBUSE_UB_SHADER_PARAM_IDX
// {
//
//   float4 u_shaderParam0;             // Offset:    0 Size:    16
//   float4 u_shaderParam1;             // Offset:   16 Size:    16 [unused]
//   float4 u_shaderParam2;             // Offset:   32 Size:    16 [unused]
//   float4 u_shaderParam3;             // Offset:   48 Size:    16
//   float4 u_shaderParam4;             // Offset:   64 Size:    16 [unused]
//   float4 u_shaderParam5;             // Offset:   80 Size:    16 [unused]
//   float4 u_shaderParam6;             // Offset:   96 Size:    16 [unused]
//   float4 u_shaderParam7;             // Offset:  112 Size:    16 [unused]
//
// }
//
// cbuffer CBUSE_UB_LIGHT_IDX
// {
//
//   float3 u_mapAmbient;               // Offset:    0 Size:    12 [unused]
//   float3 u_shadowColor;              // Offset:   16 Size:    12 [unused]
//   float3 u_lightDir;                 // Offset:   32 Size:    12 [unused]
//   float3 u_lightHalfDir;             // Offset:   48 Size:    12 [unused]
//   float3 u_lightColor;               // Offset:   64 Size:    12 [unused]
//   row_major float4x4 u_mtxLightWP;   // Offset:   80 Size:    64 [unused]
//   row_major float4x4 u_mtxCascadeWP[3];// Offset:  144 Size:   192
//   row_major float3x4 u_mtxLightSphere;// Offset:  336 Size:    48 [unused]
//   row_major float3x4 u_mtxLightHalfSphere;// Offset:  384 Size:    48 [unused]
//   float3 u_mapLightDir[3];           // Offset:  432 Size:    44 [unused]
//   float4 u_mapLightColor[3];         // Offset:  480 Size:    48 [unused]
//   float3 u_mapLightIntensity;        // Offset:  528 Size:    12 [unused]
//   float4 u_mapLightTexParam;         // Offset:  544 Size:    16 [unused]
//   float4 u_cloudParam;               // Offset:  560 Size:    16 [unused]
//   float4 u_windParam;                // Offset:  576 Size:    16
//   float4 u_cloudTime;                // Offset:  592 Size:    16 [unused]
//   float4 u_waterParam0;              // Offset:  608 Size:    16 [unused]
//   float4 u_waterParam1;              // Offset:  624 Size:    16 [unused]
//   float3 u_lightAimbient;            // Offset:  640 Size:    12 [unused]
//   float3 u_mapShadowBias;            // Offset:  656 Size:    12 [unused]
//   float4 u_mapGimmickColor;          // Offset:  672 Size:    16 [unused]
//   float4 u_softParticleParam;        // Offset:  688 Size:    16 [unused]
//   float4 u_effectLightParam;         // Offset:  704 Size:    16 [unused]
//   float4 u_effectShadowParam;        // Offset:  720 Size:    16 [unused]
//   float4 u_powerVelocitySize;        // Offset:  736 Size:    16
//
// }
//
// cbuffer CBUSE_UB_USER_DATA01_IDX
// {
//
//   row_major float3x4 u_mtxInstance[4];// Offset:    0 Size:   192
//   row_major float3x4 u_mtxInstanceEnd;// Offset: 12240 Size:    48 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// in_texWindSampler                 sampler      NA          NA            s11      1 
// in_texPowerVelocitySampler        sampler      NA          NA            s12      1 
// in_texWind                        texture  float4          2d            t11      1 
// in_texPowerVelocity               texture  float4          2d            t12      1 
// CBUSE_UB_WORLD_MATRIX_IDX         cbuffer      NA          NA            cb1      1 
// CBUSE_UB_LOCAL_MATRIX_IDX         cbuffer      NA          NA            cb2      1 
// CBUSE_UB_MODEL_MATERIAL_IDX       cbuffer      NA          NA            cb3      1 
// CBUSE_UB_LIGHT_IDX                cbuffer      NA          NA            cb6      1 
// CBUSE_UB_SHADER_PARAM_IDX         cbuffer      NA          NA            cb7      1 
// CBUSE_UB_USER_DATA01_IDX          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// TEXCOORD                 1   xy          5     NONE   float   xy  
// SV_InstanceID            0   x           6   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[36], immediateIndexed
dcl_constantbuffer CB2[16], immediateIndexed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_constantbuffer CB7[4], immediateIndexed
dcl_constantbuffer CB6[47], immediateIndexed
dcl_constantbuffer CB11[12], dynamicIndexed
dcl_sampler s11, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xy
dcl_input v5.xy
dcl_input_sgv v6.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_temps 9
mul r0.x, cb7[0].x, cb6[36].z
mov r1.x, cb7[0].y
mov r1.zw, l(0,0,-1.000000,1.000000)
mov r2.x, v1.w
mov r2.z, cb7[0].y
mov r3.z, v1.w
mov r3.y, l(1.000000)
mov r4.w, l(1.000000)
mad r5.xz, v5.xxyx, l(1.000000, 0.000000, -1.000000, 0.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
mov r5.y, v0.y
mov r5.w, l(1.000000)
dp4 r4.x, cb2[0].xyzw, r5.xyzw
dp4 r4.y, cb2[1].xyzw, r5.xyzw
dp4 r4.z, cb2[2].xyzw, r5.xyzw
imul null, r0.y, v6.x, l(3)
dp4 r5.x, cb11[r0.y + 0].xyzw, r4.xyzw
dp4 r5.y, cb11[r0.y + 2].xyzw, r4.xyzw
add r0.zw, r5.xxxy, -cb6[46].zzzw
mul r4.xy, r0.wzww, cb6[46].yxyy
mul r4.z, r4.x, l(-1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.yzyy, t12.xyzw, s12, l(0.000000)
mov r5.w, l(1.000000)
mul r6.x, v0.x, cb3[0].x
mov r6.yzw, v0.yyzw
dp4 r5.x, cb2[0].xyzw, r6.xyzw
dp4 r5.y, cb2[1].xyzw, r6.xyzw
dp4 r5.z, cb2[2].xyzw, r6.xyzw
dp4 r7.y, cb11[r0.y + 1].xyzw, r5.xyzw
add r0.z, r4.z, -r7.y
lt r0.w, l(0.000000), r0.z
lt r0.z, r0.z, l(0.000000)
iadd r0.z, r0.z, -r0.w
add r0.w, -r4.w, r7.y
lt r1.y, l(0.000000), r0.w
lt r0.w, r0.w, l(0.000000)
iadd r0.w, r0.w, -r1.y
iadd r0.z, r0.z, r0.w
itof r0.z, r0.z
mov_sat r0.z, r0.z
add r0.w, cb2[1].w, cb11[r0.y + 1].w
add r0.w, -r7.y, r0.w
mul r3.x, r0.w, r0.z
mul r8.xz, r3.yyxy, r4.xxyx
dp2 r0.z, r4.xyxx, r4.xyxx
sqrt r0.z, r0.z
min r8.y, r0.z, l(1.000000)
mul r3.xyz, r3.xxzx, r8.xyzx
mul r2.xyz, r2.xxzx, r3.xyzx
mul r1.xyz, r1.xxzx, r2.xyzx
dp4 r7.x, cb11[r0.y + 0].xyzw, r5.xyzw
dp4 r7.z, cb11[r0.y + 2].xyzw, r5.xyzw
mad r0.zw, cb6[36].xxxy, cb6[36].wwww, r7.xxxz
div r0.zw, r0.zzzw, cb7[3].xxxx
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r0.zwzz, t11.xyzw, s11, l(0.000000)
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul r2.xyz, r2.xyzx, cb7[3].yyyy
mul r2.xyz, r2.xyzx, v1.wwww
mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
add r1.xyz, r0.xzwx, r7.xyzx
dp4 r2.x, cb1[8].xyzw, r1.xyzw
dp4 r2.y, cb1[9].xyzw, r1.xyzw
dp4 r2.z, cb1[10].xyzw, r1.xyzw
dp4 r2.w, cb1[11].xyzw, r1.xyzw
mov o0.xyzw, r2.xyzw
add r2.xy, r2.wwww, r2.xyxx
mul r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov o5.z, r2.z
mul o1.xyz, v1.xyzx, cb3[1].xyzx
mov o1.w, cb3[1].w
mov o2.xy, v4.xyxx
mad o2.zw, v5.xxxy, l(0.000000, 0.000000, 1.000000, -1.000000), l(0.000000, 0.000000, 0.000000, 1.000000)
dp4 r3.x, cb2[12].xyzw, r6.xyzw
dp4 r3.y, cb2[13].xyzw, r6.xyzw
dp4 r3.z, cb2[14].xyzw, r6.xyzw
dp4 r3.w, cb2[15].xyzw, r6.xyzw
dp4 r4.x, cb11[r0.y + 0].xyzw, r3.xyzw
dp4 r4.y, cb11[r0.y + 1].xyzw, r3.xyzw
dp4 r4.z, cb11[r0.y + 2].xyzw, r3.xyzw
add r3.xyz, r0.xzwx, r4.xyzx
dp4 r4.x, cb1[32].xyzw, r3.xyzw
dp4 r4.y, cb1[33].xyzw, r3.xyzw
dp4 r0.x, cb1[35].xyzw, r3.xyzw
add r0.zw, r0.xxxx, r4.xxxy
mov o5.w, r0.x
mul r0.xz, r0.zzwz, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o3.w, r0.x
mov o4.w, r0.z
mov o3.y, r1.x
dp3 r3.x, cb2[0].xyzx, v2.xyzx
dp3 r3.y, cb2[1].xyzx, v2.xyzx
dp3 r3.z, cb2[2].xyzx, v2.xyzx
dp3 r4.x, cb11[r0.y + 0].xyzx, r3.xyzx
dp3 r4.y, cb11[r0.y + 1].xyzx, r3.xyzx
dp3 r4.z, cb11[r0.y + 2].xyzx, r3.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r0.xzw, r0.xxxx, r4.xxyz
mov o3.x, r0.x
mov o3.z, r2.x
mov o4.z, r2.y
mov o4.y, r1.y
mov o4.x, r0.z
mov o5.x, r0.w
mov o5.y, r1.z
dp4 r0.x, cb6[10].xyzw, r1.xyzw
mov r2.y, -r0.x
dp4 r2.x, cb6[9].xyzw, r1.xyzw
dp4 r0.x, cb6[12].xyzw, r1.xyzw
add r0.zw, r0.xxxx, r2.xxxy
mov o6.w, r0.x
mul o6.xy, r0.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
dp4 o6.z, cb6[11].xyzw, r1.xyzw
dp4 r0.x, cb6[14].xyzw, r1.xyzw
mov r2.y, -r0.x
dp4 r2.x, cb6[13].xyzw, r1.xyzw
dp4 r0.x, cb6[16].xyzw, r1.xyzw
dp4 o7.z, cb6[15].xyzw, r1.xyzw
add r0.zw, r0.xxxx, r2.xxxy
mov o7.w, r0.x
mul o7.xy, r0.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r1.xyzw, v3.xyzw, cb3[0].xxxx
dp3 r2.x, cb2[0].xyzx, r1.xyzx
dp3 r2.y, cb2[1].xyzx, r1.xyzx
dp3 r2.z, cb2[2].xyzx, r1.xyzx
mov o8.w, r1.w
dp3 o8.x, cb11[r0.y + 0].xyzx, r2.xyzx
dp3 o8.y, cb11[r0.y + 1].xyzx, r2.xyzx
dp3 o8.z, cb11[r0.y + 2].xyzx, r2.xyzx
ret 
// Approximately 129 instruction slots used
