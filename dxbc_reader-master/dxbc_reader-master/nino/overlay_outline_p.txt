//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer CBUSE_UB_CAMERA_IDX
// {
//
//   float3 u_eyePos;                   // Offset:    0 Size:    12 [unused]
//   float3 u_eyeDir;                   // Offset:   16 Size:    12 [unused]
//   float3 u_eyeUpDir;                 // Offset:   32 Size:    12 [unused]
//   float4 u_depthLinear;              // Offset:   48 Size:    16 [unused]
//   float4 u_eyeNearFarInvAspect;      // Offset:   64 Size:    16
//   row_major float3x4 u_mtxEyeSphere; // Offset:   80 Size:    48 [unused]
//   float4 u_shadowSampleParams;       // Offset:  128 Size:    16 [unused]
//   float4 u_pointLightRWParam;        // Offset:  144 Size:    16 [unused]
//   float3 u_RayleighColorP20;         // Offset:  160 Size:    12 [unused]
//   float3 u_RayleighColorP10;         // Offset:  176 Size:    12 [unused]
//   float3 u_RayleighColorO00;         // Offset:  192 Size:    12 [unused]
//   float3 u_RayleighColorM10;         // Offset:  208 Size:    12 [unused]
//   float3 u_RayleighColorM20;         // Offset:  224 Size:    12 [unused]
//   float3 u_HeightRayleighColor;      // Offset:  240 Size:    12 [unused]
//   float3 u_MieColorP20;              // Offset:  256 Size:    12 [unused]
//   float3 u_MieColorO00;              // Offset:  272 Size:    12 [unused]
//   float3 u_MieColorM20;              // Offset:  288 Size:    12 [unused]
//   float4 u_fogWorldParam0;           // Offset:  304 Size:    16 [unused]
//   float4 u_fogWorldParam1;           // Offset:  320 Size:    16 [unused]
//   float4 u_fogHeightParam0;          // Offset:  336 Size:    16 [unused]
//   float4 u_fogHeightParam1;          // Offset:  352 Size:    16 [unused]
//
// }
//
// cbuffer CB0
// {
//
//   float4 u_edge_fade;                // Offset:    0 Size:    16
//   float2 u_texelSize;                // Offset:   16 Size:     8
//   float u_fxaaSpanMax;               // Offset:   24 Size:     4
//   float u_fxaaReduceMul;             // Offset:   28 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// in_depth_texSampler               sampler      NA          NA             s1      1
// in_edge_texSampler                sampler      NA          NA             s2      1
// in_depth_tex                      texture  float4          2d             t1      1
// in_edge_tex                       texture  float4          2d             t2      1
// CB0                               cbuffer      NA          NA            cb0      1
// CBUSE_UB_CAMERA_IDX               cbuffer      NA          NA            cb8      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float
// COLOR                    0   xyzw        1     NONE   float
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   x           3     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Depth                 0    N/A   oDepth    DEPTH   float    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB8[5], immediateIndexed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v2.xyzw
dcl_output o0.xyzw
dcl_output oDepth
dcl_temps 3
add r0.xy, -v2.zwzz, v2.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s2, l(0.000000)
mad r1.xyzw, v2.zwzw, l(1.000000, -1.000000, -1.000000, 1.000000), v2.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.xyxx, t2.yzxw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.zwzz, t2.xyzw, s2, l(0.000000)
add r1.zw, v2.zzzw, v2.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t2.yzwx, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.z, v2.xyxx, t2.yzxw, s2, l(0.000000)
mov r0.xy, r0.xzxx
mov r1.y, r0.w
min r2.xy, r0.xyxx, r1.xyxx
min r1.w, r2.y, r2.x
min r1.w, r1.w, r1.z
max r2.xy, r0.xyxx, r1.xyxx
max r2.x, r2.y, r2.x
max r1.z, r1.z, r2.x
add r0.z, r0.z, r0.x
add r2.x, r0.w, r1.x
add r2.x, r0.z, -r2.x
mov r2.xz, -r2.xxxx
add r0.xy, r0.xyxx, r1.xyxx
add r2.yw, -r0.yyyy, r0.xxxx
add r0.x, r1.x, r0.z
add r0.x, r0.w, r0.x
mul r0.x, r0.x, cb0[1].w
mul r0.x, r0.x, l(0.250000)
max r0.x, r0.x, l(0.007813)
min r0.y, |r2.w|, |r2.z|
add r0.x, r0.x, r0.y
rcp r0.x, r0.x
mul r0.xyzw, r0.xxxx, r2.xyzw
max r0.xyzw, r0.xyzw, -cb0[1].zzzz
min r0.xyzw, r0.xyzw, cb0[1].zzzz
mul r0.xyzw, r0.xyzw, cb0[1].xyxy
mad r2.xyzw, r0.zwzw, l(-0.166667, -0.166667, 0.166667, 0.166667), v2.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t2.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t2.yxzw, s2, l(0.000000)
add r1.x, r1.y, r1.x
mul r1.xy, r1.xxxx, l(0.500000, 0.250000, 0.000000, 0.000000)
mad r0.xyzw, r0.xyzw, l(-0.500000, -0.500000, 0.500000, 0.500000), v2.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.y, r0.zwzz, t2.yxzw, s2, l(0.000000)
add r0.x, r0.y, r0.x
mad r0.x, r0.x, l(0.250000), r1.y
lt r0.y, r0.x, r1.w
lt r0.z, r1.z, r0.x
or r0.y, r0.z, r0.y
movc r0.x, r0.y, r1.x, r0.x
add r0.y, r0.x, l(-0.003922)
lt r0.y, r0.y, l(0.000000)
discard_nz r0.y
lt r0.y, l(0.100000), r0.x
if_nz r0.y
  add r1.xy, v2.xyxx, cb0[0].zwzz
  mov r1.zw, v2.yyyx
  sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xzxx, t1.zxyw, s1, l(0.000000)
  add r2.xy, v2.xyxx, -cb0[0].zwzz
  mov r2.zw, v2.yyyx
  sample_l_indexable(texture2d)(float,float,float,float) r0.z, r2.xzxx, t1.zyxw, s1, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.wyww, t1.xyzw, s1, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r1.y, r2.wyww, t1.yxzw, s1, l(0.000000)
  min r0.yz, r0.yyzy, r1.xxyx
  min r0.y, r0.z, r0.y
else
  sample_l_indexable(texture2d)(float,float,float,float) r0.y, v2.xyxx, t1.yxzw, s1, l(0.000000)
endif
dp2 r0.z, cb8[4].yyyy, cb8[4].xxxx
add r0.w, -cb8[4].x, cb8[4].y
add r1.x, cb8[4].x, cb8[4].y
mad r0.w, r0.y, r0.w, -r1.x
div r0.z, r0.z, r0.w
add r0.z, -r0.z, -cb0[0].x
mul_sat r0.z, r0.z, cb0[0].y
add r0.z, -r0.z, l(1.000000)
mad o0.xyz, -r0.zzzz, r0.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov o0.w, l(1.000000)
mov oDepth, r0.y
ret
// Approximately 78 instruction slots used
