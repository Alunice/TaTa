//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// tex0Sampler                       sampler      NA          NA             s0      1
// EdgeToneTexSampler                sampler      NA          NA             s1      1
// tex0                              texture  float4          2d             t0      1
// EdgeToneTex                       texture  float4          2d             t1      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 3     zw        1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 7
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
dp3 r0.x, r0.xywx, r0.xywx
ge r0.x, l(0.000000), r0.x
and r0.x, r0.x, l(0x3f800000)
ge r1.x, r0.z, l(1.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.x, r0.x, r1.x
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
if_nz r0.x
  mov o0.xyzw, l(0,0,0,0)
  ret
endif
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t0.yzwx, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, v2.zwzz, t0.yzwx, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, v3.xyxx, t0.yzwx, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.yzw, v3.zwzz, t0.xzwy, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.x, v4.xyxx, t0.zxyw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.y, v4.zwzz, t0.xzyw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.z, v5.xyxx, t0.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.w, v5.zwzz, t0.xywz, s0, l(0.000000)
mov r6.x, r1.y
mov r6.y, r2.y
mov r6.z, r3.y
mov r6.w, r4.y
add r5.xyzw, r5.xyzw, r6.xyzw
dp4 r0.x, r5.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000)
mad r5.y, r0.z, l(0.200000), r0.x
mul r0.x, r0.w, v1.z
mad r0.x, r0.x, l(0.850000), r0.w
mov r6.x, r1.z
mov r6.y, r2.z
mov r6.z, r3.z
mov r6.w, r4.z
add r6.xyzw, -r0.xxxx, r6.xyzw
mul_sat r6.xyzw, r6.xyzw, l(100000.000000, 100000.000000, 100000.000000, 100000.000000)
dp4 r0.x, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
min r0.x, r0.x, l(1.000000)
mov r4.x, r1.x
mov r4.y, r2.x
mov r4.z, r3.x
mul r1.xyzw, r4.xyzw, r6.xyzw
max r0.zw, r1.zzzw, r1.xxxy
max r0.z, r0.w, r0.z
add r0.x, -r0.x, l(1.000000)
mad r5.x, r0.y, r0.x, r0.z
mov_sat r0.xy, r5.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t1.xwyz, s1, l(0.000000)
add r0.z, -r5.y, l(1.000000)
add_sat r0.z, r0.z, r0.z
mul r0.y, r0.z, r0.y
add r0.x, -r0.x, l(1.000000)
mul o0.xyz, r0.yyyy, r0.xxxx
mov o0.w, l(1.000000)
ret
// Approximately 54 instruction slots used
