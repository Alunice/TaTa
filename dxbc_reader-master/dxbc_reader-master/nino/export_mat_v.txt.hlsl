class CBUSE_UB_WORLD_MATRIX_IDX{
	float4x4	u_mtxWV;
	float4x4	u_mtxVP;
	float4x4	u_mtxWP;
	float4x4	u_mtxVW;
	float4x4	u_mtxPV;
	float4x4	u_mtxPW;
	float4x4	u_mtxWVOld;
	float4x4	u_mtxVPOld;
	float4x4	u_mtxWPOld;
}
class CBUSE_UB_LOCAL_MATRIX_IDX{
	float4x4	u_mtxLW;
	float4x4	u_mtxLV;
	float4x4	u_mtxLP;
	float4x4	u_mtxLWOld;
	float4x4	u_mtxLVOld;
}
class CBUSE_UB_MODEL_MATERIAL_IDX{
	float2	u_symFlag;
	int	u_meshId;
	float	u_alphaTestRef;
	float4	u_diffuse;
	float4	u_ambient;
	float4	u_speculer;
	float2x3	u_texProj;
	float4	u_uvRange;
}
class CBUSE_UB_CHARA_LIGHT_IDX{
	float4	u_charaAmbient;
	float4	u_charaHighLightColor;
	float4	u_charaShadowColor;
	float4	u_charaLightDir;
	float4	u_depthEdgeParam;
	float4	u_occlusionParam;
	float4	u_charaShadowBias;
	float4	u_charaShadowParam;
	float4	u_charaUnderRimColor;
	float4	u_charaBlendRateParam;
	float4	u_charaRimOutline;
	float4	u_pointLightToonParam;
	float4	u_pointLightBlendParam;
	float4	u_charaAmbLightParam;
	float3	u_lightProb1;
	float3	u_lightProb2;
	float3	u_lightProb3;
	float3	u_lightProb4;
	float3	u_lightProb5;
	float3	u_lightProb6;
	float3	u_lightProb7;
	float3	u_lightProb8;
	float3	u_lightProb9;
	float3	u_charaStatusColor;
	float4	u_charaStatusRimColor;
	float4	u_charaStatusPowInOutDis;
	float3	u_charaStatusUvCenter;
	float4	u_charaStatusUvSclMove;
	float4x4	u_charaSelfShadowMtxWP;
	float4	u_charaSelfShadowSampleParams;
	float4	u_charaWaterWetParam;
	float4	u_charaWaterWetDiffClr;
	float4	u_charaWaterWetSpcClr;
	float4	u_charaGrTParam;
	float4	u_charaStatusHitColor;
	float4	u_charaStatusHitParam;
	float4	pointLightRimParam;
}
class CBUSE_UB_CAMERA_IDX{
	float3	u_eyePos;
	float3	u_eyeDir;
	float3	u_eyeUpDir;
	float4	u_depthLinear;
	float4	u_eyeNearFarInvAspect;
	float3x4	u_mtxEyeSphere;
	float4	u_shadowSampleParams;
	float4	u_pointLightRWParam;
	float3	u_RayleighColorP20;
	float3	u_RayleighColorP10;
	float3	u_RayleighColorO00;
	float3	u_RayleighColorM10;
	float3	u_RayleighColorM20;
	float3	u_HeightRayleighColor;
	float3	u_MieColorP20;
	float3	u_MieColorO00;
	float3	u_MieColorM20;
	float4	u_fogWorldParam0;
	float4	u_fogWorldParam1;
	float4	u_fogHeightParam0;
	float4	u_fogHeightParam1;
}
class CBUSE_UB_LIGHT_IDX{
	float3	u_mapAmbient;
	float3	u_shadowColor;
	float3	u_lightDir;
	float3	u_lightHalfDir;
	float3	u_lightColor;
	float4x4	u_mtxLightWP;
	float4x4	u_mtxCascadeWP;
	float3x4	u_mtxLightSphere;
	float3x4	u_mtxLightHalfSphere;
	float3	u_mapLightDir;
	float4	u_mapLightColor;
	float3	u_mapLightIntensity;
	float4	u_mapLightTexParam;
	float4	u_cloudParam;
	float4	u_windParam;
	float4	u_cloudTime;
	float4	u_waterParam0;
	float4	u_waterParam1;
	float3	u_lightAimbient;
	float3	u_mapShadowBias;
	float4	u_mapGimmickColor;
	float4	u_softParticleParam;
	float4	u_effectLightParam;
	float4	u_effectShadowParam;
	float4	u_powerVelocitySize;
}
class CBUSE_UB_VERTEX_BLEND_IDX{
	float3x4	u_mtxBone;
	float3x4	u_mtxBoneEnd;
}
class CBUSE_UB_VERTEX_BLEND_OLD_IDX{
	float3x4	u_mtxBoneOld;
	float3x4	u_mtxBoneOldEnd;
}
class INPUT {
	POSITION;
	COLOR;
	NORMAL;
	TEXCOORD1;
	BLENDWEIGHT;
	BLENDINDICES;
}
class OUT {
	SV_Position;
	COLOR;
	TEXCOORD1;
	TEXCOORD2;
	TEXCOORD3;
	TEXCOORD4;
	TEXCOORD5;
	TEXCOORD6;
	TEXCOORD7;
	TEXCOORD8;
	TEXCOORD9;
	TEXCOORD10;
	TEXCOORD11;
}
r0.x = in.POSITION.x * CBUSE_UB_MODEL_MATERIAL_IDX.u_symFlag.x;
r1.x = in.POSITION.y * CBUSE_UB_CHARA_LIGHT_IDX.u_charaWaterWetParam.z;
r1.y = -in.POSITION.y*CBUSE_UB_CHARA_LIGHT_IDX.u_charaWaterWetParam.z + in.TEXCOORD3.w;
r1.x = in.TEXCOORD3.z*r1.y + r1.x;
out.TEXCOORD12.xyzw = saturate(r1.xxxx);
r1.x = 0.1 >= in.TEXCOORD3.z;
if (r1.x != 0) {
	r1.x = floor(CBUSE_UB_MODEL_MATERIAL_IDX.u_symFlag.y) //ftou;
	r1.xyzw = in.BLENDINDICES.xyzw + r1.xxxx;
	r2.xy = r1.xy & float2(255, 255) ;
	null = r2.xy * r2.xyxx;
	r3.xyz = in.BLENDWEIGHT.xyz & float3(0x0000ffff, 0x0000ffff, 0x0000ffff) ;
	r3.xyz = r3.xyzx // itof;
	r1.xy = r1.xyxx >> float4(8, 8, 0, 0);
	null = r1.xy * r1.xyxx;
	r2.zw = in.BLENDWEIGHT.xxxy >> float4(0, 0, 16, 16);
	r2.zw = r2.zzzw // itof;
	r4.xyzw = r2.zzzz * CBUSE_UB_VERTEX_BLEND_IDX.xyzw;
	r5.xyzw = r2.zzzz * CBUSE_UB_VERTEX_BLEND_IDX.xyzw;
	r6.xyzw = r2.zzzz * CBUSE_UB_VERTEX_BLEND_IDX.xyzw;
	r4.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.xxxx + r4.xyzw;
	r5.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.xxxx + r5.xyzw;
	r6.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.xxxx + r6.xyzw;
	r4.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.yyyy + r4.xyzw;
	r5.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.yyyy + r5.xyzw;
	r6.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.yyyy + r6.xyzw;
	r4.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r2.wwww + r4.xyzw;
	r5.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r2.wwww + r5.xyzw;
	r6.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r2.wwww + r6.xyzw;
	r3.w = 0.0 < r3.z;
	if (r3.w != 0) {
		r7.xy = r1.zw & float2(255, 255) ;
		null = r7.xy * r7.xyxx;
		r8.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.zzzz + r4.xyzw;
		r9.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.zzzz + r5.xyzw;
		r10.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r3.zzzz + r6.xyzw;
		r7.xz = r1.zzwz >> float4(8, 0, 8, 0);
		null = r7.xz * r7.xxzx;
		r11.xy = in.BLENDWEIGHT.zwzz >> float4(16, 16, 0, 0);
		r11.xy = r11.xyxx // itof;
		r8.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r11.xxxx + r8.xyzw;
		r9.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r11.xxxx + r9.xyzw;
		r10.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r11.xxxx + r10.xyzw;
		r7.x = in.BLENDWEIGHT.w & 0x0000ffff ;
		r7.x = r7.x // itof;
		r8.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r7.xxxx + r8.xyzw;
		r9.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r7.xxxx + r9.xyzw;
		r10.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r7.xxxx + r10.xyzw;
		r4.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r11.yyyy + r8.xyzw;
		r5.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r11.yyyy + r9.xyzw;
		r6.xyzw = CBUSE_UB_VERTEX_BLEND_IDX.xyzw*r11.yyyy + r10.xyzw;
	}
	r4.xyzw = r4.xyzw * float4(1.5e-05, 1.5e-05, 1.5e-05, 1.5e-05);
	r5.xyzw = r5.xyzw * float4(1.5e-05, 1.5e-05, 1.5e-05, 1.5e-05);
	r6.xyzw = r6.xyzw * float4(1.5e-05, 1.5e-05, 1.5e-05, 1.5e-05);
	r7.xyzw = r2.zzzz * CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw;
	r8.xyzw = r2.zzzz * CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw;
	r9.xyzw = r2.zzzz * CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw;
	r7.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.xxxx + r7.xyzw;
	r8.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.xxxx + r8.xyzw;
	r9.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.xxxx + r9.xyzw;
	r7.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.yyyy + r7.xyzw;
	r8.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.yyyy + r8.xyzw;
	r9.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.yyyy + r9.xyzw;
	r7.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r2.wwww + r7.xyzw;
	r8.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r2.wwww + r8.xyzw;
	r2.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r2.wwww + r9.xyzw;
	if (r3.w != 0) {
		r1.xy = r1.zw & float2(255, 255) ;
		null = r1.xy * r1.xyxx;
		r9.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.zzzz + r7.xyzw;
		r10.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.zzzz + r8.xyzw;
		r3.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r3.zzzz + r2.xyzw;
		r1.xz = r1.zzwz >> float4(8, 0, 8, 0);
		null = r1.xz * r1.xxzx;
		r11.xy = in.BLENDWEIGHT.zwzz >> float4(16, 16, 0, 0);
		r11.xy = r11.xyxx // itof;
		r9.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r11.xxxx + r9.xyzw;
		r10.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r11.xxxx + r10.xyzw;
		r3.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r11.xxxx + r3.xyzw;
		r1.x = in.BLENDWEIGHT.w & 0x0000ffff ;
		r1.x = r1.x // itof;
		r9.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r1.xxxx + r9.xyzw;
		r10.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r1.xxxx + r10.xyzw;
		r3.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r1.xxxx + r3.xyzw;
		r7.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r11.yyyy + r9.xyzw;
		r8.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r11.yyyy + r10.xyzw;
		r2.xyzw = CBUSE_UB_VERTEX_BLEND_OLD_IDX.xyzw*r11.yyyy + r3.xyzw;
	}
	r1.xyzw = r7.xyzw * float4(1.5e-05, 1.5e-05, 1.5e-05, 1.5e-05);
	r3.xyzw = r8.xyzw * float4(1.5e-05, 1.5e-05, 1.5e-05, 1.5e-05);
	r2.xyzw = r2.xyzw * float4(1.5e-05, 1.5e-05, 1.5e-05, 1.5e-05);
	r0.yzw = in.POSITION.yzw;
	r1.x = dot(r1.xyzw, r0.xyzw);
	r1.y = dot(r3.xyzw, r0.xyzw);
	r1.z = dot(r2.xyzw, r0.xyzw);
	r2.x = dot(r4.xyzw, r0.xyzw);
	r2.y = dot(r5.xyzw, r0.xyzw);
	r2.z = dot(r6.xyzw, r0.xyzw);
	r3.x = dot(r4.xyzx, in.NORMAL.xyzx);
	r3.y = dot(r5.xyzx, in.NORMAL.xyzx);
	r3.z = dot(r6.xyzx, in.NORMAL.xyzx);
	r0.xyz = r2.xyz;
} else {
	r1.x = in.BLENDINDICES.x * CBUSE_UB_MODEL_MATERIAL_IDX.u_symFlag.x;
	r0.yz = in.POSITION.yz;
	r3.xyz = in.NORMAL.xyz;
	r1.yz = in.BLENDINDICES.yz;
}
r2.xy = in.TEXCOORD3.xy;
r2.z = 1.0;
r4.x = dot(CBUSE_UB_MODEL_MATERIAL_IDX.u_texProj[0].xyzx, r2.xyzx);
r4.y = dot(CBUSE_UB_MODEL_MATERIAL_IDX.u_texProj[1].xyzx, r2.xyzx);
r0.w = in.POSITION.w;
r2.x = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLP[0].xyzw, r0.xyzw);
r2.y = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLP[1].xyzw, r0.xyzw);
r2.z = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLP[2].xyzw, r0.xyzw);
r2.w = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLP[3].xyzw, r0.xyzw);
r5.x = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLW[0].xyzw, r0.xyzw);
r5.y = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLW[1].xyzw, r0.xyzw);
r5.z = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLW[2].xyzw, r0.xyzw);
r0.w = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLW[3].xyzw, r0.xyzw);
r3.w = -r2.w + 25.5;
r3.w = saturate(r3.w * 0.039216);
r3.w = -r3.w + 1.0;
r3.w = r3.w * 2.5;
r3.w = min(r3.w, 1.0);
r3.w = min(r3.w, 0.6);
out.TEXCOORD2.w = -r3.w + 1.0;
r1.w = in.POSITION.w;
r6.x = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLVOld[0].xyzw, r1.xyzw);
r6.y = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLVOld[1].xyzw, r1.xyzw);
r6.z = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLVOld[2].xyzw, r1.xyzw);
r6.w = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLVOld[3].xyzw, r1.xyzw);
r1.x = dot(CBUSE_UB_WORLD_MATRIX_IDX.u_mtxVPOld[0].xyzw, r6.xyzw);
r1.y = dot(CBUSE_UB_WORLD_MATRIX_IDX.u_mtxVPOld[1].xyzw, r6.xyzw);
out.TEXCOORD6.z = dot(CBUSE_UB_WORLD_MATRIX_IDX.u_mtxVPOld[2].xyzw, r6.xyzw);
r1.z = dot(CBUSE_UB_WORLD_MATRIX_IDX.u_mtxVPOld[3].xyzw, r6.xyzw);
r1.xy = r1.zz + r1.xy;
out.TEXCOORD6.xy = r1.xy * float2(0.5, 0.5);
r1.xy = r2.ww + r2.xy;
out.TEXCOORD7.xy = r1.xy * float2(0.5, 0.5);
r1.x = tex2D(in_texOccl, r4.xy).x //sample_state in_texOcclSampler;
r1.x = saturate(dot(r1.xxxx, in.COLOR.wwww));
r1.y = r1.x-1.0;
out.TEXCOORD5.y = r1.y * CBUSE_UB_CHARA_LIGHT_IDX.u_occlusionParam.x;
r6.x = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLW[0].xyzx, r3.xyzx);
r6.y = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLW[1].xyzx, r3.xyzx);
r6.z = dot(CBUSE_UB_LOCAL_MATRIX_IDX.u_mtxLW[2].xyzx, r3.xyzx);
r1.y = dot(r6.xyzx, r6.xyzx);
r1.y = rsqrt(r1.y);
r3.xyz = r1.yyy * r6.xyz;
r0.xyz = r3.xyz*CBUSE_UB_CHARA_LIGHT_IDX.u_charaShadowBias.www + r5.xyz;
r6.x = dot(CBUSE_UB_LIGHT_IDX.u_mtxCascadeWP[0].xyzw, r0.xyzw);
r1.y = dot(CBUSE_UB_LIGHT_IDX.u_mtxCascadeWP[1].xyzw, r0.xyzw);
out.TEXCOORD9.z = dot(CBUSE_UB_LIGHT_IDX.u_mtxCascadeWP[2].xyzw, r0.xyzw);
r1.w = dot(CBUSE_UB_LIGHT_IDX.u_mtxCascadeWP[3].xyzw, r0.xyzw);
r6.y = -r1.y;
r4.zw = r1.ww + r6.xy;
out.TEXCOORD9.xy = r4.zw * float2(0.5, 0.5);
r6.x = dot(CBUSE_UB_LIGHT_IDX.u_mtxCascadeWP[4].xyzw, r0.xyzw);
r1.y = dot(CBUSE_UB_LIGHT_IDX.u_mtxCascadeWP[5].xyzw, r0.xyzw);
out.TEXCOORD10.z = dot(CBUSE_UB_LIGHT_IDX.u_mtxCascadeWP[6].xyzw, r0.xyzw);
r0.x = dot(CBUSE_UB_LIGHT_IDX.u_mtxCascadeWP[7].xyzw, r0.xyzw);
r6.y = -r1.y;
r0.yz = r0.xx + r6.xy;
out.TEXCOORD10.xy = r0.yz * float2(0.5, 0.5);
r0.y = dot(CBUSE_UB_WORLD_MATRIX_IDX.u_mtxWV[0].xyzx, r3.xyzx);
r0.z = dot(CBUSE_UB_WORLD_MATRIX_IDX.u_mtxWV[1].xyzx, r3.xyzx);
r1.y = dot(CBUSE_UB_WORLD_MATRIX_IDX.u_mtxWV[2].xyzx, r3.xyzx);
r1.y = r1.y * CBUSE_UB_CHARA_LIGHT_IDX.u_pointLightBlendParam.z;
r6.xyz = r0.zzz * CBUSE_UB_WORLD_MATRIX_IDX.u_mtxWV[1].xyz;
r6.xyz = r0.yyy*CBUSE_UB_WORLD_MATRIX_IDX.u_mtxWV[0].xyz + r6.xyz;
r6.xyz = r1.yyy*CBUSE_UB_WORLD_MATRIX_IDX.u_mtxWV[2].xyz + r6.xyz;
r0.y = dot(r6.xyzx, r6.xyzx);
r0.y = rsqrt(r0.y);
out.TEXCOORD4.xyz = r0.yyy * r6.xyz;
r0.y = 0.0 < CBUSE_UB_MODEL_MATERIAL_IDX.u_ambient.w;
if (r0.y != 0) {
	r6.xyz = r5.xyz-CBUSE_UB_CAMERA_IDX.u_eyePos.xyz;
	r0.y = dot(r6.xyzx, r6.xyzx);
	r0.y = sqrt(r0.y);
	r6.xyz = r6.xyz/r0.yyy;
	r0.z = dot(r6.xyzx, CBUSE_UB_LIGHT_IDX.u_lightDir.xyzx);
	r1.y = r0.z * r0.z;
	r1.y = r1.y*0.059683 + 0.059683;
	r1.y = r1.y * 12.0;
	r7.x = min(r1.y, 1.0);
	r1.y = -CBUSE_UB_CAMERA_IDX.u_fogWorldParam1.x*CBUSE_UB_CAMERA_IDX.u_fogWorldParam1.x + 1.0;
	r3.w = r0.z*r0.z + 1.0;
	r4.zw = CBUSE_UB_CAMERA_IDX.u_fogWorldParam1.xx*CBUSE_UB_CAMERA_IDX.u_fogWorldParam1.xx + float2(2.0, 1.0);
	r0.z = dot(r0.zzzz, CBUSE_UB_CAMERA_IDX.u_fogWorldParam1.xxxx);
	r0.z = -r0.z + r4.w;
	r0.z = log2(abs(r0.z));
	r0.z = r0.z * 1.5;
	r0.z = exp2(r0.z);
	r1.y = r1.y/r4.z;
	r0.z = r3.w/r0.z;
	r0.z = r0.z * r1.y;
	r7.y = r0.z * 0.119366;
	r0.z = r0.y * 0.004;
	r0.z = min(r0.z, 1.0);
	r1.y = r0.z * r6.y;
	r6.xyzw = r6.yyyy*r0.zzzz + float4(-0.116, 0.0, 0.116, 0.216);
	r8.xyzw = saturate(r6.xyzw * float4(10.0, 8.620689, 8.620689, 10.0));
	r9.xyz = CBUSE_UB_CAMERA_IDX.u_RayleighColorP20.xyz-CBUSE_UB_CAMERA_IDX.u_RayleighColorP10.xyz;
	r9.xyz = r8.xxx*r9.xyz + CBUSE_UB_CAMERA_IDX.u_RayleighColorP10.xyz;
	r10.xyz = CBUSE_UB_CAMERA_IDX.u_RayleighColorP10.xyz-CBUSE_UB_CAMERA_IDX.u_RayleighColorO00.xyz;
	r10.xyz = r8.yyy*r10.xyz + CBUSE_UB_CAMERA_IDX.u_RayleighColorO00.xyz;
	r11.xyz = CBUSE_UB_CAMERA_IDX.u_RayleighColorO00.xyz-CBUSE_UB_CAMERA_IDX.u_RayleighColorM10.xyz;
	r8.xyz = r8.zzz*r11.xyz + CBUSE_UB_CAMERA_IDX.u_RayleighColorM10.xyz;
	r11.xyz = CBUSE_UB_CAMERA_IDX.u_RayleighColorM10.xyz-CBUSE_UB_CAMERA_IDX.u_RayleighColorM20.xyz;
	r11.xyz = r8.www*r11.xyz + CBUSE_UB_CAMERA_IDX.u_RayleighColorM20.xyz;
	r12.xyz = r1.yyy >= float3(-0.116, 0.0, 0.116);
	r0.z = r12.y & 0x3f800000 // 0x3f800000=1.0, maybe means: if (r12.y==0xFFFFFFFF) r0.z=1.0;
	r8.xyz = r12.xxx;
	r8.xyz = r12.yyy;
	r8.xyz = r12.zzz;
	r4.zw = saturate(r6.yw * float2(4.62963, 4.62963));
	r6.xyz = CBUSE_UB_CAMERA_IDX.u_MieColorP20.xyz-CBUSE_UB_CAMERA_IDX.u_MieColorO00.xyz;
	r6.xyz = r4.zzz*r6.xyz + CBUSE_UB_CAMERA_IDX.u_MieColorO00.xyz;
	r9.xyz = CBUSE_UB_CAMERA_IDX.u_MieColorO00.xyz-CBUSE_UB_CAMERA_IDX.u_MieColorM20.xyz;
	r9.xyz = r4.www*r9.xyz + CBUSE_UB_CAMERA_IDX.u_MieColorM20.xyz;
	r6.xyz = r6.xyz-r9.xyz;
	r6.xyz = r0.zzz*r6.xyz + r9.xyz;
	r0.z = r5.y-CBUSE_UB_CAMERA_IDX.u_fogHeightParam0.x;
	r0.z = r0.z * CBUSE_UB_CAMERA_IDX.u_fogHeightParam0.y;
	r0.z = r0.z * -1.442695;
	r7.z = exp2(r0.z);
	r9.x = r0.y + CBUSE_UB_CAMERA_IDX.u_fogWorldParam0.x;
	r9.y = r0.y + CBUSE_UB_CAMERA_IDX.u_fogHeightParam0.z;
	r0.yz = max(r9.xy, float2(0.0, 0.0));
	r9.xy = r0.yy * CBUSE_UB_CAMERA_IDX.u_fogWorldParam0.yz;
	r9.z = r0.z * CBUSE_UB_CAMERA_IDX.u_fogHeightParam0.w;
	r9.w = r0.z * CBUSE_UB_CAMERA_IDX.u_fogHeightParam1.x;
	r9.xyzw = r9.xyzw * float4(1.442695, 1.442695, 1.442695, 1.442695);
	r9.xyzw = exp2(r9.xyzw);
	r9.xyzw = -r9.xyzw + float4(1.0, 1.0, 1.0, 1.0);
	r7.w = r7.y * r7.z;
	r10.xyzw = r7.xyzw * r9.xyzw;
	r1.y = dot(r8.xyzx, float4(0.29891, 0.58661, 0.11448, 0.0));
	r0.y = saturate(r0.y * CBUSE_UB_CAMERA_IDX.u_fogWorldParam0.w);
	r7.xzw = -r1.yyy + r8.xyz;
	r7.xzw = r0.yyy*r7.xzw + r1.yyy;
	r0.y = dot(CBUSE_UB_CAMERA_IDX.u_HeightRayleighColor.xyzx, float4(0.29891, 0.58661, 0.11448, 0.0));
	r0.z = saturate(r0.z * CBUSE_UB_CAMERA_IDX.u_fogHeightParam1.y);
	r8.xyz = -r0.yyy + CBUSE_UB_CAMERA_IDX.u_HeightRayleighColor.xyz;
	r8.xyz = r0.zzz*r8.xyz + r0.yyy;
	r11.xyz = r7.xzw * r10.xxx;
	r0.yz = saturate(r10.zw);
	r8.xyz = r8.xyz * r0.yyy;
	r7.xzw = r6.xyz * r0.zzz;
	r6.xyz = r10.yyy*r6.xyz + r7.xzw;
	r11.w = r10.x;
	r8.w = r10.z;
	r8.xyzw = r8.xyzw + r11.xyzw;
	out.TEXCOORD11.xyz = r6.xyz + r8.xyz;
	r0.y = -r8.w + 1.0;
	r0.z = -r9.y*r7.y + 1.0;
	r0.yz = max(r0.yz, float2(0.0, 0.0));
	out.TEXCOORD11.w = r0.z * r0.y;
} else {
	out.TEXCOORD11.xyzw = float4(0, 0, 0, 1.0);
}
out.SV_Position.xyzw = r2.xyzw;
out.COLOR.xyzw = in.COLOR.xyzw;
out.TEXCOORD2.z = CBUSE_UB_MODEL_MATERIAL_IDX.u_alphaTestRef.w;
out.TEXCOORD2.xy = r4.xy;
out.TEXCOORD5.zw = float2(0, 0);
out.TEXCOORD5.x = r1.x;
out.TEXCOORD6.w = r1.z;
out.TEXCOORD7.zw = r2.zw;
out.TEXCOORD8.w = r0.w;
out.TEXCOORD8.xyz = r5.xyz;
out.TEXCOORD9.w = r1.w;
out.TEXCOORD10.w = r0.x;
out.TEXCOORD3.xyz = r3.xyz;
return;