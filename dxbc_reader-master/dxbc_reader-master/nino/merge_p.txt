//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer $Globals
// {
//
//   float4 edgeWeight0;                // Offset:    0 Size:    16
//   float4 edgeWeight1;                // Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// tex0Sampler                       sampler      NA          NA             s0      1
// tex1Sampler                       sampler      NA          NA             s1      1
// tex2Sampler                       sampler      NA          NA             s2      1
// tex0                              texture  float4          2d             t0      1
// tex1                              texture  float4          2d             t1      1
// tex2                              texture  float4          2d             t2      1
// $Globals                          cbuffer      NA          NA            cb0      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 11
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t1.xyzw, s1
mad r0.z, r0.z, l(255.000000), l(0.500000)
ftoi r0.z, r0.z
and r0.z, r0.z, l(1)
ilt r0.z, l(0), r0.z
if_z r0.z
  mov o0.xyzw, l(0,0,0,0)
  ret
endif
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v2.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v2.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v3.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v3.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, v4.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v4.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v5.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, v5.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r10.xyz, v1.xyxx, t2.xyzw, s2
add r2.xyzw, r1.xyzw, -r2.xyzw
add r3.xyzw, r1.xyzw, -r3.xyzw
add r2.xyzw, |r2.xyzw|, |r3.xyzw|
add r3.xyzw, r1.xyzw, -r4.xyzw
add r4.xyzw, r1.xyzw, -r5.xyzw
add r3.xyzw, |r3.xyzw|, |r4.xyzw|
add r2.xyzw, r2.xyzw, r3.xyzw
add r3.xyzw, r1.xyzw, -r6.xyzw
add r4.xyzw, r1.xyzw, -r7.xyzw
add r3.xyzw, |r3.xyzw|, |r4.xyzw|
add r4.xyzw, r1.xyzw, -r8.xyzw
add r5.xyzw, r1.xyzw, -r9.xyzw
add r4.xyzw, |r4.xyzw|, |r5.xyzw|
add r3.xyzw, r3.xyzw, r4.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul_sat r0.z, r0.w, cb0[1].z
mad_sat r0.z, r0.z, l(1.333300), l(-0.333250)
add r1.x, -cb0[1].x, cb0[1].y
mad r1.x, r0.w, r1.x, cb0[1].x
mad r3.w, -r2.w, l(0.500000), r1.x
mad r3.xyz, r2.xyzx, l(1.000000, 1.000000, -0.500000, 0.000000), l(0.000000, 0.000000, 0.250000, 0.000000)
mul_sat r2.xyzw, r3.xyzw, l(5.000000, 128.000000, 256.000000, 256.000000)
mul r2.y, r0.x, r2.y
add r1.xy, -r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.x, r1.y, r1.x
mul r1.x, r2.w, r2.z
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t2.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v2.zwzz, t2.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v3.xyxx, t2.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.zwzz, t2.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r2.w, v2.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r3.w, v2.zwzz, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r4.w, v3.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r5.w, v3.zwzz, t1.xyzw, s1
add r6.xyzw, -cb0[0].xxxz, cb0[0].yyyw
mad r6.xyzw, r0.wwww, r6.xyzw, cb0[0].xxxz
mov r10.w, r0.w
add r2.xyzw, -r2.xyzw, r10.xyzw
ge r2.xyzw, r6.zzzw, |r2.xyzw|
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
add r3.xyzw, -r3.xyzw, r10.xyzw
ge r3.xyzw, r6.zzzw, |r3.xyzw|
and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r2.xyzw, r2.xyzw, r3.xyzw
add r3.xyzw, -r4.xyzw, r10.xyzw
ge r3.xyzw, r6.zzzw, |r3.xyzw|
and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r2.xyzw, r2.xyzw, r3.xyzw
add r3.xyzw, -r5.xyzw, r10.xyzw
ge r3.xyzw, r6.xyzw, |r3.xyzw|
and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r2.xyzw, r2.xyzw, r3.xyzw
mul r1.y, r2.y, r2.x
mul r1.y, r2.z, r1.y
mul r1.x, r1.y, r1.x
mul r0.x, r0.x, r2.w
mad r1.x, r0.x, r1.x, -r0.x
mad o0.z, r0.z, r1.x, r0.x
mov o0.x, r1.w
mov o0.yw, r0.yyyw
ret
// Approximately 80 instruction slots used
