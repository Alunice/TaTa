//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer CBUSE_UB_WORLD_MATRIX_IDX
// {
//
//   row_major float4x4 u_mtxWV;        // Offset:    0 Size:    64
//   row_major float4x4 u_mtxVP;        // Offset:   64 Size:    64 [unused]
//   row_major float4x4 u_mtxWP;        // Offset:  128 Size:    64 [unused]
//   row_major float4x4 u_mtxVW;        // Offset:  192 Size:    64 [unused]
//   row_major float4x4 u_mtxPV;        // Offset:  256 Size:    64 [unused]
//   row_major float4x4 u_mtxPW;        // Offset:  320 Size:    64 [unused]
//   row_major float4x4 u_mtxWVOld;     // Offset:  384 Size:    64 [unused]
//   row_major float4x4 u_mtxVPOld;     // Offset:  448 Size:    64 [unused]
//   row_major float4x4 u_mtxWPOld;     // Offset:  512 Size:    64 [unused]
//
// }
//
// cbuffer CBUSE_UB_MODEL_MATERIAL_IDX
// {
//
//   float2 u_symFlag;                  // Offset:    0 Size:     8 [unused]
//   int u_meshId;                      // Offset:    8 Size:     4 [unused]
//   float u_alphaTestRef;              // Offset:   12 Size:     4 [unused]
//   float4 u_diffuse;                  // Offset:   16 Size:    16
//   float4 u_ambient;                  // Offset:   32 Size:    16
//   float4 u_speculer;                 // Offset:   48 Size:    16 [unused]
//   row_major float2x3 u_texProj[6];   // Offset:   64 Size:   188 [unused]
//   float4 u_uvRange[6];               // Offset:  256 Size:    96 [unused]
//
// }
//
// cbuffer CBUSE_UB_SHADER_PARAM_IDX
// {
//
//   float4 u_shaderParam0;             // Offset:    0 Size:    16 [unused]
//   float4 u_shaderParam1;             // Offset:   16 Size:    16 [unused]
//   float4 u_shaderParam2;             // Offset:   32 Size:    16
//   float4 u_shaderParam3;             // Offset:   48 Size:    16 [unused]
//   float4 u_shaderParam4;             // Offset:   64 Size:    16 [unused]
//   float4 u_shaderParam5;             // Offset:   80 Size:    16 [unused]
//   float4 u_shaderParam6;             // Offset:   96 Size:    16 [unused]
//   float4 u_shaderParam7;             // Offset:  112 Size:    16 [unused]
//
// }
//
// cbuffer CBUSE_UB_CAMERA_IDX
// {
//
//   float3 u_eyePos;                   // Offset:    0 Size:    12
//   float3 u_eyeDir;                   // Offset:   16 Size:    12 [unused]
//   float3 u_eyeUpDir;                 // Offset:   32 Size:    12 [unused]
//   float4 u_depthLinear;              // Offset:   48 Size:    16 [unused]
//   float4 u_eyeNearFarInvAspect;      // Offset:   64 Size:    16 [unused]
//   row_major float3x4 u_mtxEyeSphere; // Offset:   80 Size:    48
//   float4 u_shadowSampleParams;       // Offset:  128 Size:    16
//   float4 u_pointLightRWParam;        // Offset:  144 Size:    16 [unused]
//   float3 u_RayleighColorP20;         // Offset:  160 Size:    12 [unused]
//   float3 u_RayleighColorP10;         // Offset:  176 Size:    12 [unused]
//   float3 u_RayleighColorO00;         // Offset:  192 Size:    12 [unused]
//   float3 u_RayleighColorM10;         // Offset:  208 Size:    12 [unused]
//   float3 u_RayleighColorM20;         // Offset:  224 Size:    12 [unused]
//   float3 u_HeightRayleighColor;      // Offset:  240 Size:    12 [unused]
//   float3 u_MieColorP20;              // Offset:  256 Size:    12 [unused]
//   float3 u_MieColorO00;              // Offset:  272 Size:    12 [unused]
//   float3 u_MieColorM20;              // Offset:  288 Size:    12 [unused]
//   float4 u_fogWorldParam0;           // Offset:  304 Size:    16 [unused]
//   float4 u_fogWorldParam1;           // Offset:  320 Size:    16
//   float4 u_fogHeightParam0;          // Offset:  336 Size:    16 [unused]
//   float4 u_fogHeightParam1;          // Offset:  352 Size:    16 [unused]
//
// }
//
// cbuffer CBUSE_UB_CHARA_LIGHT_IDX
// {
//
//   float4 u_charaAmbient;             // Offset:    0 Size:    16
//   float4 u_charaHighLightColor;      // Offset:   16 Size:    16
//   float4 u_charaShadowColor[2];      // Offset:   32 Size:    32
//   float4 u_charaLightDir;            // Offset:   64 Size:    16
//   float4 u_depthEdgeParam;           // Offset:   80 Size:    16
//   float4 u_occlusionParam;           // Offset:   96 Size:    16
//   float4 u_charaShadowBias;          // Offset:  112 Size:    16
//   float4 u_charaShadowParam;         // Offset:  128 Size:    16
//   float4 u_charaUnderRimColor;       // Offset:  144 Size:    16
//   float4 u_charaBlendRateParam;      // Offset:  160 Size:    16
//   float4 u_charaRimOutline;          // Offset:  176 Size:    16
//   float4 u_pointLightToonParam;      // Offset:  192 Size:    16
//   float4 u_pointLightBlendParam;     // Offset:  208 Size:    16
//   float4 u_charaAmbLightParam;       // Offset:  224 Size:    16
//   float3 u_lightProb1;               // Offset:  240 Size:    12 [unused]
//   float3 u_lightProb2;               // Offset:  256 Size:    12 [unused]
//   float3 u_lightProb3;               // Offset:  272 Size:    12 [unused]
//   float3 u_lightProb4;               // Offset:  288 Size:    12 [unused]
//   float3 u_lightProb5;               // Offset:  304 Size:    12 [unused]
//   float3 u_lightProb6;               // Offset:  320 Size:    12 [unused]
//   float3 u_lightProb7;               // Offset:  336 Size:    12 [unused]
//   float3 u_lightProb8;               // Offset:  352 Size:    12 [unused]
//   float3 u_lightProb9;               // Offset:  368 Size:    12 [unused]
//   float3 u_charaStatusColor;         // Offset:  384 Size:    12 [unused]
//   float4 u_charaStatusRimColor;      // Offset:  400 Size:    16 [unused]
//   float4 u_charaStatusPowInOutDis;   // Offset:  416 Size:    16 [unused]
//   float3 u_charaStatusUvCenter;      // Offset:  432 Size:    12 [unused]
//   float4 u_charaStatusUvSclMove;     // Offset:  448 Size:    16 [unused]
//   row_major float4x4 u_charaSelfShadowMtxWP;// Offset:  464 Size:    64 [unused]
//   float4 u_charaSelfShadowSampleParams;// Offset:  528 Size:    16 [unused]
//   float4 u_charaWaterWetParam;       // Offset:  544 Size:    16
//   float4 u_charaWaterWetDiffClr;     // Offset:  560 Size:    16 [unused]
//   float4 u_charaWaterWetSpcClr;      // Offset:  576 Size:    16
//   float4 u_charaGrTParam;            // Offset:  592 Size:    16 [unused]
//   float4 u_charaStatusHitColor;      // Offset:  608 Size:    16 [unused]
//   float4 u_charaStatusHitParam;      // Offset:  624 Size:    16 [unused]
//   float4 pointLightRimParam;         // Offset:  640 Size:    16
//
// }
//
// cbuffer CBUSE_UB_POINT_LIGHT_IDX
// {
//
//   float4 u_lightPosX;                // Offset:    0 Size:    16
//   float4 u_lightPosY;                // Offset:   16 Size:    16
//   float4 u_lightPosZ;                // Offset:   32 Size:    16
//   float4 u_lightColor0;              // Offset:   48 Size:    16
//   float4 u_lightColor1;              // Offset:   64 Size:    16
//   float4 u_lightColor2;              // Offset:   80 Size:    16
//   float4 u_lightColor3;              // Offset:   96 Size:    16
//   float4 u_lightAttenuation;         // Offset:  112 Size:    16
//
// }
//
// Resource bind info for ro_waterWetBuffer
// {
//
//   float $Element;                    // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// in_tex0Sampler                    sampler      NA          NA             s0      1
// in_tex1Sampler                    sampler      NA          NA             s1      1
// in_texOcclSampler                 sampler      NA          NA             s2      1
// in_tex2Sampler                    sampler      NA          NA             s3      1
// in_tex3Sampler                    sampler      NA          NA             s4      1
// in_texWaterWetSampler             sampler      NA          NA             s9      1
// in_texGrdSampler                  sampler      NA          NA            s10      1
// in_texScatterOcclSampler          sampler      NA          NA            s14      1
// in_texShadowSampler             sampler_c      NA          NA            s15      1
// in_tex0                           texture  float4          2d             t0      1
// in_tex1                           texture  float4          2d             t1      1
// in_texOccl                        texture  float4          2d             t2      1
// in_tex2                           texture  float4          2d             t3      1
// in_tex3                           texture  float4          2d             t4      1
// in_texWaterWet                    texture  float4          2d             t9      1
// in_texGrd                         texture  float4          2d            t10      1
// in_texScatterOccl                 texture  float4          2d            t14      1
// in_texShadow                      texture  float4     2darray            t15      1
// in_texDither                      texture  float4          2d            t18      1
// ro_waterWetBuffer                 texture  struct         r/o            t19      1
// CBUSE_UB_WORLD_MATRIX_IDX         cbuffer      NA          NA            cb1      1
// CBUSE_UB_MODEL_MATERIAL_IDX       cbuffer      NA          NA            cb3      1
// CBUSE_UB_SHADER_PARAM_IDX         cbuffer      NA          NA            cb7      1
// CBUSE_UB_CAMERA_IDX               cbuffer      NA          NA            cb8      1
// CBUSE_UB_CHARA_LIGHT_IDX          cbuffer      NA          NA            cb9      1
// CBUSE_UB_POINT_LIGHT_IDX          cbuffer      NA          NA           cb10      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyz
// COLOR                    0   xyzw        1     NONE   float   xyz
// TEXCOORD                 0   xyzw        2     NONE   float   xy w
// TEXCOORD                 4   xyz         3     NONE   float   xyz
// TEXCOORD                 5   xyz         4     NONE   float   xyz
// TEXCOORD                 8   xyzw        5     NONE   float   xy
// TEXCOORD                 9   xyzw        6     NONE   float   xy w
// TEXCOORD                10   xyzw        7     NONE   float   xy w
// TEXCOORD                11   xyzw        8     NONE   float   xyz
// TEXCOORD                12   xyzw        9     NONE   float   xyzw
// TEXCOORD                13   xyzw       10     NONE   float   xyzw
// TEXCOORD                17   xyzw       11     NONE   float   xyzw
// TEXCOORD                20   xyzw       12     NONE   float   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[3], immediateIndexed
dcl_constantbuffer CB3[3], immediateIndexed
dcl_constantbuffer CB7[3], immediateIndexed
dcl_constantbuffer CB8[21], immediateIndexed
dcl_constantbuffer CB9[41], immediateIndexed
dcl_constantbuffer CB10[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s14, mode_default
dcl_sampler s15, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2darray (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_structured t19, 4
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyw
dcl_input_ps linear v7.xyw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyzw
dcl_input_ps linear v10.xyzw
dcl_input_ps linear v11.xyzw
dcl_input_ps linear v12.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 15
dcl_indexableTemp x0[2], 4
dcl_indexableTemp x1[3], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
mul r1.xyzw, r0.wxyz, cb3[1].wxyz
mul r2.xy, v0.xyxx, l(0.062500, 0.062500, 0.000000, 0.000000)
ge r2.zw, r2.xxxy, -r2.xxxy
frc r2.xy, |r2.xyxx|
movc r2.xy, r2.zwzz, r2.xyxx, -r2.xyxx
mul r2.xy, r2.xyxx, l(16.000000, 16.000000, 0.000000, 0.000000)
ftoi r2.xy, r2.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.x, r2.xyzw, t18.xyzw
ge r1.x, r1.x, r2.x
ieq r1.x, r1.x, l(0)
discard_nz r1.x
dp3 r1.x, v3.xyzx, v3.xyzx
rsq r1.x, r1.x
mul r2.xyz, r1.xxxx, v3.xyzx
dp3 r1.x, v4.xyzx, v4.xyzx
rsq r1.x, r1.x
mul r3.xyz, r1.xxxx, v4.xyzx
dp3 r4.x, cb1[0].xyzx, r2.xyzx
dp3 r4.y, cb1[1].xyzx, r2.xyzx
dp3 r4.z, cb1[2].xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v2.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t2.yzxw, s2
add r7.xyz, v8.xyzx, -cb8[0].xyzx
dp3 r1.x, r7.xyzx, r7.xyzx
rsq r1.x, r1.x
mul r7.xyz, r1.xxxx, r7.xyzx
dp3_sat r1.x, r2.xyzx, -r7.xyzx
dp3 r7.z, r2.xyzx, cb9[4].xyzx
add r3.w, -r1.x, l(1.000000)
mov r7.xw, -r7.zzzz
mul_sat r6.zw, r3.wwww, r7.zzzw
mov_sat r4.w, v5.x
mad r4.w, cb9[6].y, r4.w, v5.y
mad r5.w, -r7.z, cb9[6].y, r7.z
add r5.w, r4.w, r5.w
mad r8.x, r5.w, l(0.500000), l(0.500000)
add r5.w, -r8.x, l(1.000000)
mad r8.y, r6.x, r5.w, r8.x
mad r5.w, r7.z, cb9[6].y, r7.x
add r4.w, r4.w, r5.w
mad r4.w, r4.w, l(0.500000), r6.w
mov r7.x, -cb9[2].w
mov r7.y, -cb9[3].w
add r6.xw, r7.xxxy, r8.xxxy
add r5.w, r6.z, r8.x
add_sat r6.xz, r6.wwxw, l(0.500000, 0.000000, 0.500000, 0.000000)
add r5.w, r5.w, -cb9[1].w
mul_sat r5.w, r5.w, cb9[0].w
div r7.xyzw, v9.xyzw, v9.wwww
div r8.xyz, v10.xyzx, v10.wwww
mov x0[0].xy, r7.xyxx
mov x0[1].xy, r8.xyxx
deriv_rtx_coarse r9.x, r7.z
deriv_rtx_coarse r9.y, r8.z
deriv_rty_coarse r10.x, r7.z
deriv_rty_coarse r10.y, r8.z
max r9.xy, |r9.xyxx|, |r10.xyxx|
mul r9.xy, r9.xyxx, cb9[7].zzzz
mad r9.xy, cb9[7].xxxx, l(0.010000, 0.010000, 0.000000, 0.000000), r9.xyxx
min r9.xy, r9.xyxx, cb9[7].yyyy
mov r8.w, r7.z
add r8.zw, r8.wwwz, -r9.xxxy
min r9.xz, r8.zzwz, l(1.000000, 0.000000, 1.000000, 0.000000)
mov x0[0].z, r9.x
mov x0[1].z, r9.z
mov r9.yw, r7.xxxy
mov x1[0].xyz, r9.ywxy
mov r9.xy, r8.xyxx
mov x1[1].xyz, r9.xyzx
mov x1[2].xyz, r9.xyzx
mov r7.xz, l(0,0,0,0)
loop
  ilt r8.x, r7.x, l(2)
  ieq r8.y, r7.z, l(0)
  and r8.x, r8.y, r8.x
  breakc_z r8.x
  mov r8.x, x1[r7.x + 0].x
  mov r8.y, x1[r7.x + 0].y
  min r8.z, r8.y, r8.x
  max r8.x, r8.y, r8.x
  lt r8.y, l(0.000977), r8.z
  lt r8.x, r8.x, l(0.999023)
  and r8.x, r8.x, r8.y
  and r7.z, r8.x, l(1)
  iadd r7.x, r7.x, l(1)
endloop
imad r7.z, r7.x, r7.z, l(-1)
itof r8.w, r7.z
ge r7.z, r8.w, l(0.000000)
if_nz r7.z
  iadd r7.z, r7.x, l(-1)
  mov r8.xyz, x1[r7.z + 0].xyzx
  mad r9.xyzw, cb8[8].zwzw, l(-1.000000, -1.000000, 1.000000, 1.000000), r8.xyxy
  min r9.x, r9.y, r9.x
  max r9.y, r9.w, r9.z
  mad_sat r9.x, -r9.x, l(10.240000), l(1.000000)
  mad r9.y, r9.y, l(1024.000000), l(-924.000000)
  mul_sat r9.y, r9.y, l(0.010000)
  max r9.x, r9.y, r9.x
  ge r9.y, r8.w, l(1.000000)
  ge r9.z, l(0.000000), r9.x
  or r9.y, r9.z, r9.y
  if_nz r9.y
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r8.xywx, t15.xxxx, s15, r8.z
    add r10.xy, r8.xyxx, cb8[8].zwzz
    mov r10.z, r8.w
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r10.xyzx, t15.xxxx, s15, r8.z
    add r9.y, r9.z, r9.y
    add r10.xy, r8.xyxx, -cb8[8].zwzz
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r10.xyzx, t15.xxxx, s15, r8.z
    add r9.y, r9.z, r9.y
    mad r10.xy, cb8[8].zwzz, l(1.000000, -1.000000, 0.000000, 0.000000), r8.xyxx
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r10.xyzx, t15.xxxx, s15, r8.z
    add r9.y, r9.z, r9.y
    mad r10.xy, -cb8[8].zwzz, l(1.000000, -1.000000, 0.000000, 0.000000), r8.xyxx
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r10.xyzx, t15.xxxx, s15, r8.z
    add r9.y, r9.z, r9.y
    mul r9.y, r9.y, l(0.200000)
  else
    ilt r7.x, r7.x, l(2)
    and r7.x, r7.x, l(1)
    iadd r7.x, r7.z, r7.x
    mov r10.xyz, x1[r7.x + 0].xyzx
    itof r10.w, r7.x
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.x, r8.xywx, t15.xxxx, s15, r8.z
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r10.xywx, t15.xxxx, s15, r10.z
    add r7.z, -r7.x, r7.z
    mad r7.x, r9.x, r7.z, r7.x
    add r11.xy, r8.xyxx, cb8[8].zwzz
    add r12.xy, r10.xyxx, cb8[8].zwzz
    mov r11.z, r8.w
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r11.xyzx, t15.xxxx, s15, r8.z
    mov r12.z, r10.w
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r12.xyzx, t15.xxxx, s15, r10.z
    add r8.w, -r7.z, r8.w
    mad r7.z, r9.x, r8.w, r7.z
    add r7.x, r7.z, r7.x
    add r11.xy, r8.xyxx, -cb8[8].zwzz
    add r12.xy, r10.xyxx, -cb8[8].zwzz
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r11.xyzx, t15.xxxx, s15, r8.z
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r12.xyzx, t15.xxxx, s15, r10.z
    add r8.w, -r7.z, r8.w
    mad r7.z, r9.x, r8.w, r7.z
    add r7.x, r7.z, r7.x
    mad r11.xy, cb8[8].zwzz, l(1.000000, -1.000000, 0.000000, 0.000000), r8.xyxx
    mad r12.xy, cb8[8].zwzz, l(1.000000, -1.000000, 0.000000, 0.000000), r10.xyxx
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r11.xyzx, t15.xxxx, s15, r8.z
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r12.xyzx, t15.xxxx, s15, r10.z
    add r8.w, -r7.z, r8.w
    mad r7.z, r9.x, r8.w, r7.z
    add r7.x, r7.z, r7.x
    mad r11.xy, -cb8[8].zwzz, l(1.000000, -1.000000, 0.000000, 0.000000), r8.xyxx
    mad r12.xy, -cb8[8].zwzz, l(1.000000, -1.000000, 0.000000, 0.000000), r10.xyxx
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r11.xyzx, t15.xxxx, s15, r8.z
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.x, r12.xyzx, t15.xxxx, s15, r10.z
    add r8.x, -r7.z, r8.x
    mad r7.z, r9.x, r8.x, r7.z
    add r7.x, r7.z, r7.x
    mul r9.y, r7.x, l(0.200000)
  endif
else
  mov r9.y, l(0)
endif
mul r7.x, r7.w, l(0.050000)
lt r7.x, r7.y, r7.x
and r7.zw, r7.xxxx, l(0, 0, 1, 0x3f800000)
mov r7.xy, x0[r7.z + 0].xyxx
sample_indexable(texture2darray)(float,float,float,float) r7.w, r7.xywx, t15.yzwx, s0
add r7.xy, -r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r7.x, |r7.y|, |r7.x|
lt r7.x, l(0.500000), r7.x
and r7.x, r7.x, l(0x3f800000)
add r7.y, -r7.w, l(1.000000)
mad r7.x, r7.x, r7.y, r7.w
mov r7.y, x0[r7.z + 0].z
add r7.x, -r7.x, r7.y
mul r7.x, r7.x, cb9[11].z
mul r7.y, r7.x, r9.y
mul_sat r7.xy, r7.xyxx, l(1.000000, 100.000000, 0.000000, 0.000000)
mad r7.x, r7.x, -r9.y, r9.y
mul r7.z, r9.y, cb9[11].w
max r7.x, r7.z, r7.x
add r7.x, -r9.y, r7.x
mad r7.x, r7.y, r7.x, r9.y
lt r7.y, cb9[11].z, l(0.000000)
and r7.y, r7.y, l(0x3f800000)
mul r7.y, r9.y, r7.y
mul_sat r7.y, r7.y, l(100.000000)
mad r7.z, r9.y, cb9[11].w, -r7.x
mad r7.x, r7.y, r7.z, r7.x
mul r7.x, r7.x, cb9[8].x
add r8.xyzw, -v8.xxxx, cb10[0].xyzw
add r9.xyzw, -v8.yyyy, cb10[1].xyzw
add r10.xyzw, -v8.zzzz, cb10[2].xyzw
mul r11.xyzw, r9.xyzw, r9.xyzw
mad r11.xyzw, r8.xyzw, r8.xyzw, r11.xyzw
mad r11.xyzw, r10.xyzw, r10.xyzw, r11.xyzw
mul r9.xyzw, r3.yyyy, r9.xyzw
mad r8.xyzw, r8.xyzw, r3.xxxx, r9.xyzw
mad r8.xyzw, r10.xyzw, r3.zzzz, r8.xyzw
rsq r9.xyzw, r11.xyzw
mad r10.xyzw, r9.xyzw, r11.xyzw, -cb10[7].xyzw
div_sat r10.xyzw, r10.xyzw, -cb10[7].xyzw
mul r10.xyzw, r10.xyzw, r10.xyzw
mul r10.xyzw, r10.xyzw, cb9[12].yyyy
mad r11.xyzw, r8.xyzw, r9.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add_sat r11.xyzw, r11.xyzw, -cb9[12].xxxx
mov_sat r12.xyzw, r10.xyzw
mul r11.xyzw, r11.xyzw, r12.xyzw
mul r11.xyzw, r11.xyzw, cb9[12].wwww
mul r10.xyzw, r10.xyzw, r10.xyzw
mad_sat r8.xyzw, r8.xyzw, r9.xyzw, -cb9[12].xxxx
mad_sat r8.xyzw, r10.xyzw, r8.xyzw, r11.xyzw
mul r3.xyz, r8.xxxx, cb10[3].xyzx
mul r7.yzw, r8.yyyy, cb10[4].xxyz
mul r7.yzw, r7.yyzw, cb9[13].xxxx
mul r9.xyz, r8.zzzz, cb10[5].xyzx
mul r10.xyz, r8.wwww, cb10[6].xyzx
mad r3.xyz, r3.xyzx, cb9[13].xxxx, r7.yzwy
mad r3.xyz, r9.xyzx, cb9[13].xxxx, r3.xyzx
mad r3.xyz, r10.xyzx, cb9[13].xxxx, r3.xyzx
add r7.y, r8.y, r8.x
add r7.y, r8.z, r7.y
add r7.y, r8.w, r7.y
mul r7.z, r7.y, cb9[12].z
mov r6.w, cb7[2].x
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r6.zwzz, t10.xyzw, s10
mov r6.z, cb7[2].y
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r6.xzxx, t10.xyzw, s10
mul r6.xzw, r8.xxyz, cb9[2].xxyz
mad r8.xyz, r9.xyzx, cb9[3].xyzx, -r6.xzwx
mad r6.xzw, r9.wwww, r8.xxyz, r6.xxzw
dp3 r7.w, r1.yzwy, l(0.298910, 0.586610, 0.114480, 0.000000)
mul r8.x, r7.w, cb9[10].z
mul r9.xyz, r3.xyzx, r8.xxxx
mad r10.xyz, r7.wwww, cb9[10].wwww, cb9[0].xyzx
mad r11.xyz, -r0.xyzx, cb3[1].xyzx, r10.xyzx
mad r1.yzw, cb9[14].xxxx, r11.xxyz, r1.yyzw
add r10.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r10.xyz, cb9[14].yyyy, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r11.xyz, r1.yzwy, r10.xyzx
max r7.x, r7.x, r8.w
mad r6.xzw, r7.wwww, cb9[10].wwww, r6.xxzw
mul r8.y, v12.x, l(64.000000)
round_ni r8.z, r8.y
ftou r8.z, r8.z
iadd r8.w, r8.z, l(1)
umin r8.w, r8.w, l(64)
frc r8.y, r8.y
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.z, r8.z, l(0), t19.xxxx
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(0), t19.xxxx
add r8.w, -r8.z, r8.w
mad_sat r8.y, r8.y, r8.w, r8.z
mul_sat r8.z, v1.y, l(100000.000000)
add_sat r12.xy, -cb7[2].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r8.z, r8.z, r12.x
mul r8.zw, r8.zzzz, cb9[34].xxxy
add r12.xzw, r6.xxzw, l(-1.000000, 0.000000, -1.000000, -1.000000)
mad r13.xyz, r8.zzzz, r12.xzwx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r13.xyz, r11.xyzx, r13.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r13.xyz, r8.wwww, r13.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r14.x, cb8[5].xyzw, r2.xyzw
dp4 r14.y, cb8[6].xyzw, r2.xyzw
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r14.xyxx, t9.xyzw, s9
mul r2.xyz, r2.xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, cb9[36].xyzx
mul r2.xyz, r12.yyyy, r2.xyzx
mad r2.xyz, r11.xyzx, r13.xyzx, r2.xyzx
mad r1.yzw, -r1.yyzw, r10.xxyz, r2.xxyz
mad r1.yzw, r8.yyyy, r1.yyzw, r11.xxyz
mul r2.xy, r7.xxxx, cb9[8].zwzz
add r6.xzw, -r1.yyzw, r6.xxzw
mad r1.yzw, r2.xxxx, r6.xxzw, r1.yyzw
mad r2.xyz, r2.yyyy, r12.xzwx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.yzw, r1.yyzw, r2.xxyz
mad r2.x, r7.w, cb9[10].z, r6.y
min r2.x, r2.x, l(1.000000)
mad r0.xyz, r0.xyzx, cb3[1].xyzx, -r1.yzwy
mad r0.xyz, r2.xxxx, r0.xyzx, r1.yzwy
mul r1.y, r7.z, cb9[13].y
mad r2.xyz, r3.xyzx, r8.xxxx, -r0.xyzx
mad r0.xyz, r1.yyyy, r2.xyzx, r0.xyzx
add r1.y, r4.w, l(0.500000)
add r1.y, r1.y, -cb9[9].w
mul_sat r1.y, r1.y, cb9[10].y
mul r1.z, r3.w, r3.w
mul_sat r1.z, r1.z, cb9[40].x
mul r1.z, r7.y, r1.z
lt r1.z, l(0.300000), r1.z
and r1.z, r1.z, l(0x3f800000)
mul_sat r2.xyz, r9.xyzx, cb9[40].yyyy
mad r3.xyz, cb9[1].xyzx, r5.wwww, r9.xyzx
mad r2.xyz, r2.xyzx, r1.zzzz, r3.xyzx
mad r1.yzw, cb9[9].xxyz, r1.yyyy, r2.xxyz
mul r2.xyz, r0.xyzx, r1.yzwy
mad r1.yzw, -r2.xxyz, cb9[10].xxxx, r1.yyzw
add r0.xyz, r0.xyzx, r1.yzwy
add r1.y, l(1.000000), cb3[2].x
add r1.z, -cb9[5].y, cb9[5].x
mad r1.z, r1.x, r1.z, cb9[5].y
add r1.z, r1.z, v2.w
add r1.w, cb9[8].w, cb9[8].z
mul_sat r1.w, r1.w, r7.x
mul_sat r1.z, r1.z, cb9[5].z
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r14.xyxx, t3.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v2.xyxx, t4.xyzw, s4
add r1.w, -r1.w, l(1.000000)
mul r3.xyz, r1.wwww, r3.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mad r0.xyz, r0.xyzx, r1.yyyy, r2.xyzx
div r2.xy, v7.xyxx, v7.wwww
add r2.z, -r2.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.y, r2.xzxx, t14.yxzw, s14
add_sat r1.y, r1.y, cb8[20].y
mul r3.xyz, r1.yyyy, v11.xyzx
mad o0.xyz, r0.xyzx, v11.wwww, r3.xyzx
div r0.xy, v6.xyxx, v6.wwww
add o1.xy, -r0.xyxx, r2.xyxx
mul r0.x, r1.z, cb9[5].w
add r0.yz, r5.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
mul_sat r2.xy, r0.yzyy, l(256.000000, 256.000000, 0.000000, 0.000000)
mul r0.y, r5.z, v1.z
mul_sat r2.z, r0.x, r0.y
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r4.xyzx
mad o4.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, r0.w
mov o1.z, l(0)
mov o1.w, v0.z
mov o2.xz, v1.yyxy
mov o2.y, r2.x
mov o2.w, r1.x
mov o3.xy, r2.yzyy
mov o3.z, l(0.027451)
mov o3.w, v2.w
mov o4.w, l(0)
ret
// Approximately 341 instruction slots used
