//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer CBUSE_UB_WORLD_MATRIX_IDX
// {
//
//   row_major float4x4 u_mtxWV;        // Offset:    0 Size:    64
//   row_major float4x4 u_mtxVP;        // Offset:   64 Size:    64 [unused]
//   row_major float4x4 u_mtxWP;        // Offset:  128 Size:    64 [unused]
//   row_major float4x4 u_mtxVW;        // Offset:  192 Size:    64 [unused]
//   row_major float4x4 u_mtxPV;        // Offset:  256 Size:    64 [unused]
//   row_major float4x4 u_mtxPW;        // Offset:  320 Size:    64 [unused]
//   row_major float4x4 u_mtxWVOld;     // Offset:  384 Size:    64 [unused]
//   row_major float4x4 u_mtxVPOld;     // Offset:  448 Size:    64
//   row_major float4x4 u_mtxWPOld;     // Offset:  512 Size:    64 [unused]
//
// }
//
// cbuffer CBUSE_UB_LOCAL_MATRIX_IDX
// {
//
//   row_major float4x4 u_mtxLW;        // Offset:    0 Size:    64
//   row_major float4x4 u_mtxLV;        // Offset:   64 Size:    64 [unused]
//   row_major float4x4 u_mtxLP;        // Offset:  128 Size:    64
//   row_major float4x4 u_mtxLWOld;     // Offset:  192 Size:    64 [unused]
//   row_major float4x4 u_mtxLVOld;     // Offset:  256 Size:    64
//
// }
//
// cbuffer CBUSE_UB_MODEL_MATERIAL_IDX
// {
//
//   float2 u_symFlag;                  // Offset:    0 Size:     8
//   int u_meshId;                      // Offset:    8 Size:     4 [unused]
//   float u_alphaTestRef;              // Offset:   12 Size:     4
//   float4 u_diffuse;                  // Offset:   16 Size:    16 [unused]
//   float4 u_ambient;                  // Offset:   32 Size:    16
//   float4 u_speculer;                 // Offset:   48 Size:    16 [unused]
//   row_major float2x3 u_texProj[6];   // Offset:   64 Size:   188
//   float4 u_uvRange[6];               // Offset:  256 Size:    96 [unused]
//
// }
//
// cbuffer CBUSE_UB_CHARA_LIGHT_IDX
// {
//
//   float4 u_charaAmbient;             // Offset:    0 Size:    16 [unused]
//   float4 u_charaHighLightColor;      // Offset:   16 Size:    16 [unused]
//   float4 u_charaShadowColor[2];      // Offset:   32 Size:    32 [unused]
//   float4 u_charaLightDir;            // Offset:   64 Size:    16 [unused]
//   float4 u_depthEdgeParam;           // Offset:   80 Size:    16 [unused]
//   float4 u_occlusionParam;           // Offset:   96 Size:    16
//   float4 u_charaShadowBias;          // Offset:  112 Size:    16
//   float4 u_charaShadowParam;         // Offset:  128 Size:    16 [unused]
//   float4 u_charaUnderRimColor;       // Offset:  144 Size:    16 [unused]
//   float4 u_charaBlendRateParam;      // Offset:  160 Size:    16 [unused]
//   float4 u_charaRimOutline;          // Offset:  176 Size:    16 [unused]
//   float4 u_pointLightToonParam;      // Offset:  192 Size:    16 [unused]
//   float4 u_pointLightBlendParam;     // Offset:  208 Size:    16
//   float4 u_charaAmbLightParam;       // Offset:  224 Size:    16 [unused]
//   float3 u_lightProb1;               // Offset:  240 Size:    12 [unused]
//   float3 u_lightProb2;               // Offset:  256 Size:    12 [unused]
//   float3 u_lightProb3;               // Offset:  272 Size:    12 [unused]
//   float3 u_lightProb4;               // Offset:  288 Size:    12 [unused]
//   float3 u_lightProb5;               // Offset:  304 Size:    12 [unused]
//   float3 u_lightProb6;               // Offset:  320 Size:    12 [unused]
//   float3 u_lightProb7;               // Offset:  336 Size:    12 [unused]
//   float3 u_lightProb8;               // Offset:  352 Size:    12 [unused]
//   float3 u_lightProb9;               // Offset:  368 Size:    12 [unused]
//   float3 u_charaStatusColor;         // Offset:  384 Size:    12 [unused]
//   float4 u_charaStatusRimColor;      // Offset:  400 Size:    16 [unused]
//   float4 u_charaStatusPowInOutDis;   // Offset:  416 Size:    16 [unused]
//   float3 u_charaStatusUvCenter;      // Offset:  432 Size:    12 [unused]
//   float4 u_charaStatusUvSclMove;     // Offset:  448 Size:    16 [unused]
//   row_major float4x4 u_charaSelfShadowMtxWP;// Offset:  464 Size:    64 [unused]
//   float4 u_charaSelfShadowSampleParams;// Offset:  528 Size:    16 [unused]
//   float4 u_charaWaterWetParam;       // Offset:  544 Size:    16
//   float4 u_charaWaterWetDiffClr;     // Offset:  560 Size:    16 [unused]
//   float4 u_charaWaterWetSpcClr;      // Offset:  576 Size:    16 [unused]
//   float4 u_charaGrTParam;            // Offset:  592 Size:    16 [unused]
//   float4 u_charaStatusHitColor;      // Offset:  608 Size:    16 [unused]
//   float4 u_charaStatusHitParam;      // Offset:  624 Size:    16 [unused]
//   float4 pointLightRimParam;         // Offset:  640 Size:    16 [unused]
//
// }
//
// cbuffer CBUSE_UB_CAMERA_IDX
// {
//
//   float3 u_eyePos;                   // Offset:    0 Size:    12
//   float3 u_eyeDir;                   // Offset:   16 Size:    12 [unused]
//   float3 u_eyeUpDir;                 // Offset:   32 Size:    12 [unused]
//   float4 u_depthLinear;              // Offset:   48 Size:    16 [unused]
//   float4 u_eyeNearFarInvAspect;      // Offset:   64 Size:    16 [unused]
//   row_major float3x4 u_mtxEyeSphere; // Offset:   80 Size:    48 [unused]
//   float4 u_shadowSampleParams;       // Offset:  128 Size:    16 [unused]
//   float4 u_pointLightRWParam;        // Offset:  144 Size:    16 [unused]
//   float3 u_RayleighColorP20;         // Offset:  160 Size:    12
//   float3 u_RayleighColorP10;         // Offset:  176 Size:    12
//   float3 u_RayleighColorO00;         // Offset:  192 Size:    12
//   float3 u_RayleighColorM10;         // Offset:  208 Size:    12
//   float3 u_RayleighColorM20;         // Offset:  224 Size:    12
//   float3 u_HeightRayleighColor;      // Offset:  240 Size:    12
//   float3 u_MieColorP20;              // Offset:  256 Size:    12
//   float3 u_MieColorO00;              // Offset:  272 Size:    12
//   float3 u_MieColorM20;              // Offset:  288 Size:    12
//   float4 u_fogWorldParam0;           // Offset:  304 Size:    16
//   float4 u_fogWorldParam1;           // Offset:  320 Size:    16
//   float4 u_fogHeightParam0;          // Offset:  336 Size:    16
//   float4 u_fogHeightParam1;          // Offset:  352 Size:    16
//
// }
//
// cbuffer CBUSE_UB_LIGHT_IDX
// {
//
//   float3 u_mapAmbient;               // Offset:    0 Size:    12 [unused]
//   float3 u_shadowColor;              // Offset:   16 Size:    12 [unused]
//   float3 u_lightDir;                 // Offset:   32 Size:    12
//   float3 u_lightHalfDir;             // Offset:   48 Size:    12 [unused]
//   float3 u_lightColor;               // Offset:   64 Size:    12 [unused]
//   row_major float4x4 u_mtxLightWP;   // Offset:   80 Size:    64 [unused]
//   row_major float4x4 u_mtxCascadeWP[3];// Offset:  144 Size:   192
//   row_major float3x4 u_mtxLightSphere;// Offset:  336 Size:    48 [unused]
//   row_major float3x4 u_mtxLightHalfSphere;// Offset:  384 Size:    48 [unused]
//   float3 u_mapLightDir[3];           // Offset:  432 Size:    44 [unused]
//   float4 u_mapLightColor[3];         // Offset:  480 Size:    48 [unused]
//   float3 u_mapLightIntensity;        // Offset:  528 Size:    12 [unused]
//   float4 u_mapLightTexParam;         // Offset:  544 Size:    16 [unused]
//   float4 u_cloudParam;               // Offset:  560 Size:    16 [unused]
//   float4 u_windParam;                // Offset:  576 Size:    16 [unused]
//   float4 u_cloudTime;                // Offset:  592 Size:    16 [unused]
//   float4 u_waterParam0;              // Offset:  608 Size:    16 [unused]
//   float4 u_waterParam1;              // Offset:  624 Size:    16 [unused]
//   float3 u_lightAimbient;            // Offset:  640 Size:    12 [unused]
//   float3 u_mapShadowBias;            // Offset:  656 Size:    12 [unused]
//   float4 u_mapGimmickColor;          // Offset:  672 Size:    16 [unused]
//   float4 u_softParticleParam;        // Offset:  688 Size:    16 [unused]
//   float4 u_effectLightParam;         // Offset:  704 Size:    16 [unused]
//   float4 u_effectShadowParam;        // Offset:  720 Size:    16 [unused]
//   float4 u_powerVelocitySize;        // Offset:  736 Size:    16 [unused]
//
// }
//
// cbuffer CBUSE_UB_VERTEX_BLEND_IDX
// {
//
//   row_major float3x4 u_mtxBone[4];   // Offset:    0 Size:   192
//   row_major float3x4 u_mtxBoneEnd;   // Offset: 12240 Size:    48 [unused]
//
// }
//
// cbuffer CBUSE_UB_VERTEX_BLEND_OLD_IDX
// {
//
//   row_major float3x4 u_mtxBoneOld[4];// Offset:    0 Size:   192
//   row_major float3x4 u_mtxBoneOldEnd;// Offset: 12240 Size:    48 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// in_texOcclSampler                 sampler      NA          NA             s2      1
// in_texOccl                        texture  float4          2d             t2      1
// CBUSE_UB_WORLD_MATRIX_IDX         cbuffer      NA          NA            cb1      1
// CBUSE_UB_LOCAL_MATRIX_IDX         cbuffer      NA          NA            cb2      1
// CBUSE_UB_MODEL_MATERIAL_IDX       cbuffer      NA          NA            cb3      1
// CBUSE_UB_VERTEX_BLEND_IDX         cbuffer      NA          NA            cb4      1
// CBUSE_UB_VERTEX_BLEND_OLD_IDX     cbuffer      NA          NA            cb5      1
// CBUSE_UB_LIGHT_IDX                cbuffer      NA          NA            cb6      1
// CBUSE_UB_CAMERA_IDX               cbuffer      NA          NA            cb8      1
// CBUSE_UB_CHARA_LIGHT_IDX          cbuffer      NA          NA            cb9      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// BLENDWEIGHT              0   xyzw        4     NONE    uint   xyzw
// BLENDINDICES             0   xyzw        5     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 4   xyz         3     NONE   float   xyz
// TEXCOORD                 5   xyz         4     NONE   float   xyz
// TEXCOORD                 8   xyzw        5     NONE   float   xyzw
// TEXCOORD                 9   xyzw        6     NONE   float   xyzw
// TEXCOORD                10   xyzw        7     NONE   float   xyzw
// TEXCOORD                11   xyzw        8     NONE   float   xyzw
// TEXCOORD                12   xyzw        9     NONE   float   xyzw
// TEXCOORD                13   xyzw       10     NONE   float   xyzw
// TEXCOORD                17   xyzw       11     NONE   float   xyzw
// TEXCOORD                20   xyzw       12     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[32], immediateIndexed
dcl_constantbuffer CB2[20], immediateIndexed
dcl_constantbuffer CB3[6], immediateIndexed
dcl_constantbuffer CB9[35], immediateIndexed
dcl_constantbuffer CB8[23], immediateIndexed
dcl_constantbuffer CB6[17], immediateIndexed
dcl_constantbuffer CB4[12], dynamicIndexed
dcl_constantbuffer CB5[12], dynamicIndexed
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xyzw
dcl_output o12.xyzw
dcl_temps 13
mul r0.x, v0.x, cb3[0].x
mul r1.x, v0.y, cb9[34].z
mad r1.y, -v0.y, cb9[34].z, v3.w
mad r1.x, v3.z, r1.y, r1.x
mov_sat o12.xyzw, r1.xxxx
ge r1.x, l(0.100000), v3.z
if_nz r1.x
  ftou r1.x, cb3[0].y
  iadd r1.xyzw, v5.xyzw, r1.xxxx
  and r2.xy, r1.xyxx, l(255, 255, 0, 0)
  imul null, r2.xy, r2.xyxx, l(3, 3, 0, 0)
  and r3.xyz, v4.xyzx, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0)
  utof r3.xyz, r3.xyzx
  ushr r1.xy, r1.xyxx, l(8, 8, 0, 0)
  imul null, r1.xy, r1.xyxx, l(3, 3, 0, 0)
  ushr r2.zw, v4.xxxy, l(0, 0, 16, 16)
  utof r2.zw, r2.zzzw
  mul r4.xyzw, r2.zzzz, cb4[r1.x + 0].xyzw
  mul r5.xyzw, r2.zzzz, cb4[r1.x + 1].xyzw
  mul r6.xyzw, r2.zzzz, cb4[r1.x + 2].xyzw
  mad r4.xyzw, cb4[r2.x + 0].xyzw, r3.xxxx, r4.xyzw
  mad r5.xyzw, cb4[r2.x + 1].xyzw, r3.xxxx, r5.xyzw
  mad r6.xyzw, cb4[r2.x + 2].xyzw, r3.xxxx, r6.xyzw
  mad r4.xyzw, cb4[r2.y + 0].xyzw, r3.yyyy, r4.xyzw
  mad r5.xyzw, cb4[r2.y + 1].xyzw, r3.yyyy, r5.xyzw
  mad r6.xyzw, cb4[r2.y + 2].xyzw, r3.yyyy, r6.xyzw
  mad r4.xyzw, cb4[r1.y + 0].xyzw, r2.wwww, r4.xyzw
  mad r5.xyzw, cb4[r1.y + 1].xyzw, r2.wwww, r5.xyzw
  mad r6.xyzw, cb4[r1.y + 2].xyzw, r2.wwww, r6.xyzw
  lt r3.w, l(0.000000), r3.z
  if_nz r3.w
    and r7.xy, r1.zwzz, l(255, 255, 0, 0)
    imul null, r7.xy, r7.xyxx, l(3, 3, 0, 0)
    mad r8.xyzw, cb4[r7.x + 0].xyzw, r3.zzzz, r4.xyzw
    mad r9.xyzw, cb4[r7.x + 1].xyzw, r3.zzzz, r5.xyzw
    mad r10.xyzw, cb4[r7.x + 2].xyzw, r3.zzzz, r6.xyzw
    ushr r7.xz, r1.zzwz, l(8, 0, 8, 0)
    imul null, r7.xz, r7.xxzx, l(3, 0, 3, 0)
    ushr r11.xy, v4.zwzz, l(16, 16, 0, 0)
    utof r11.xy, r11.xyxx
    mad r8.xyzw, cb4[r7.x + 0].xyzw, r11.xxxx, r8.xyzw
    mad r9.xyzw, cb4[r7.x + 1].xyzw, r11.xxxx, r9.xyzw
    mad r10.xyzw, cb4[r7.x + 2].xyzw, r11.xxxx, r10.xyzw
    and r7.x, v4.w, l(0x0000ffff)
    utof r7.x, r7.x
    mad r8.xyzw, cb4[r7.y + 0].xyzw, r7.xxxx, r8.xyzw
    mad r9.xyzw, cb4[r7.y + 1].xyzw, r7.xxxx, r9.xyzw
    mad r10.xyzw, cb4[r7.y + 2].xyzw, r7.xxxx, r10.xyzw
    mad r4.xyzw, cb4[r7.z + 0].xyzw, r11.yyyy, r8.xyzw
    mad r5.xyzw, cb4[r7.z + 1].xyzw, r11.yyyy, r9.xyzw
    mad r6.xyzw, cb4[r7.z + 2].xyzw, r11.yyyy, r10.xyzw
  endif
  mul r4.xyzw, r4.xyzw, l(0.000015, 0.000015, 0.000015, 0.000015)
  mul r5.xyzw, r5.xyzw, l(0.000015, 0.000015, 0.000015, 0.000015)
  mul r6.xyzw, r6.xyzw, l(0.000015, 0.000015, 0.000015, 0.000015)
  mul r7.xyzw, r2.zzzz, cb5[r1.x + 0].xyzw
  mul r8.xyzw, r2.zzzz, cb5[r1.x + 1].xyzw
  mul r9.xyzw, r2.zzzz, cb5[r1.x + 2].xyzw
  mad r7.xyzw, cb5[r2.x + 0].xyzw, r3.xxxx, r7.xyzw
  mad r8.xyzw, cb5[r2.x + 1].xyzw, r3.xxxx, r8.xyzw
  mad r9.xyzw, cb5[r2.x + 2].xyzw, r3.xxxx, r9.xyzw
  mad r7.xyzw, cb5[r2.y + 0].xyzw, r3.yyyy, r7.xyzw
  mad r8.xyzw, cb5[r2.y + 1].xyzw, r3.yyyy, r8.xyzw
  mad r9.xyzw, cb5[r2.y + 2].xyzw, r3.yyyy, r9.xyzw
  mad r7.xyzw, cb5[r1.y + 0].xyzw, r2.wwww, r7.xyzw
  mad r8.xyzw, cb5[r1.y + 1].xyzw, r2.wwww, r8.xyzw
  mad r2.xyzw, cb5[r1.y + 2].xyzw, r2.wwww, r9.xyzw
  if_nz r3.w
    and r1.xy, r1.zwzz, l(255, 255, 0, 0)
    imul null, r1.xy, r1.xyxx, l(3, 3, 0, 0)
    mad r9.xyzw, cb5[r1.x + 0].xyzw, r3.zzzz, r7.xyzw
    mad r10.xyzw, cb5[r1.x + 1].xyzw, r3.zzzz, r8.xyzw
    mad r3.xyzw, cb5[r1.x + 2].xyzw, r3.zzzz, r2.xyzw
    ushr r1.xz, r1.zzwz, l(8, 0, 8, 0)
    imul null, r1.xz, r1.xxzx, l(3, 0, 3, 0)
    ushr r11.xy, v4.zwzz, l(16, 16, 0, 0)
    utof r11.xy, r11.xyxx
    mad r9.xyzw, cb5[r1.x + 0].xyzw, r11.xxxx, r9.xyzw
    mad r10.xyzw, cb5[r1.x + 1].xyzw, r11.xxxx, r10.xyzw
    mad r3.xyzw, cb5[r1.x + 2].xyzw, r11.xxxx, r3.xyzw
    and r1.x, v4.w, l(0x0000ffff)
    utof r1.x, r1.x
    mad r9.xyzw, cb5[r1.y + 0].xyzw, r1.xxxx, r9.xyzw
    mad r10.xyzw, cb5[r1.y + 1].xyzw, r1.xxxx, r10.xyzw
    mad r3.xyzw, cb5[r1.y + 2].xyzw, r1.xxxx, r3.xyzw
    mad r7.xyzw, cb5[r1.z + 0].xyzw, r11.yyyy, r9.xyzw
    mad r8.xyzw, cb5[r1.z + 1].xyzw, r11.yyyy, r10.xyzw
    mad r2.xyzw, cb5[r1.z + 2].xyzw, r11.yyyy, r3.xyzw
  endif
  mul r1.xyzw, r7.xyzw, l(0.000015, 0.000015, 0.000015, 0.000015)
  mul r3.xyzw, r8.xyzw, l(0.000015, 0.000015, 0.000015, 0.000015)
  mul r2.xyzw, r2.xyzw, l(0.000015, 0.000015, 0.000015, 0.000015)
  mov r0.yzw, v0.yyzw
  dp4 r1.x, r1.xyzw, r0.xyzw
  dp4 r1.y, r3.xyzw, r0.xyzw
  dp4 r1.z, r2.xyzw, r0.xyzw
  dp4 r2.x, r4.xyzw, r0.xyzw
  dp4 r2.y, r5.xyzw, r0.xyzw
  dp4 r2.z, r6.xyzw, r0.xyzw
  dp3 r3.x, r4.xyzx, v2.xyzx
  dp3 r3.y, r5.xyzx, v2.xyzx
  dp3 r3.z, r6.xyzx, v2.xyzx
  mov r0.xyz, r2.xyzx
else
  mul r1.x, v5.x, cb3[0].x
  mov r0.yz, v0.yyzy
  mov r3.xyz, v2.xyzx
  mov r1.yz, v5.yyzy
endif
mov r2.xy, v3.xyxx
mov r2.z, l(1.000000)
dp3 r4.x, cb3[4].xyzx, r2.xyzx
dp3 r4.y, cb3[5].xyzx, r2.xyzx
mov r0.w, v0.w
dp4 r2.x, cb2[8].xyzw, r0.xyzw
dp4 r2.y, cb2[9].xyzw, r0.xyzw
dp4 r2.z, cb2[10].xyzw, r0.xyzw
dp4 r2.w, cb2[11].xyzw, r0.xyzw
dp4 r5.x, cb2[0].xyzw, r0.xyzw
dp4 r5.y, cb2[1].xyzw, r0.xyzw
dp4 r5.z, cb2[2].xyzw, r0.xyzw
dp4 r0.w, cb2[3].xyzw, r0.xyzw
add r3.w, -r2.w, l(25.500000)
mul_sat r3.w, r3.w, l(0.039216)
add r3.w, -r3.w, l(1.000000)
mul r3.w, r3.w, l(2.500000)
min r3.w, r3.w, l(1.000000)
min r3.w, r3.w, l(0.600000)
add o2.w, -r3.w, l(1.000000)
mov r1.w, v0.w
dp4 r6.x, cb2[16].xyzw, r1.xyzw
dp4 r6.y, cb2[17].xyzw, r1.xyzw
dp4 r6.z, cb2[18].xyzw, r1.xyzw
dp4 r6.w, cb2[19].xyzw, r1.xyzw
dp4 r1.x, cb1[28].xyzw, r6.xyzw
dp4 r1.y, cb1[29].xyzw, r6.xyzw
dp4 o6.z, cb1[30].xyzw, r6.xyzw
dp4 r1.z, cb1[31].xyzw, r6.xyzw
add r1.xy, r1.zzzz, r1.xyxx
mul o6.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r1.xy, r2.wwww, r2.xyxx
mul o7.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r4.xyxx, t2.xyzw, s2, l(0.000000)
dp2_sat r1.x, r1.xxxx, v1.wwww
add r1.y, r1.x, l(-1.000000)
mul o5.y, r1.y, cb9[6].x
dp3 r6.x, cb2[0].xyzx, r3.xyzx
dp3 r6.y, cb2[1].xyzx, r3.xyzx
dp3 r6.z, cb2[2].xyzx, r3.xyzx
dp3 r1.y, r6.xyzx, r6.xyzx
rsq r1.y, r1.y
mul r3.xyz, r1.yyyy, r6.xyzx
mad r0.xyz, r3.xyzx, cb9[7].wwww, r5.xyzx
dp4 r6.x, cb6[9].xyzw, r0.xyzw
dp4 r1.y, cb6[10].xyzw, r0.xyzw
dp4 o9.z, cb6[11].xyzw, r0.xyzw
dp4 r1.w, cb6[12].xyzw, r0.xyzw
mov r6.y, -r1.y
add r4.zw, r1.wwww, r6.xxxy
mul o9.xy, r4.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
dp4 r6.x, cb6[13].xyzw, r0.xyzw
dp4 r1.y, cb6[14].xyzw, r0.xyzw
dp4 o10.z, cb6[15].xyzw, r0.xyzw
dp4 r0.x, cb6[16].xyzw, r0.xyzw
mov r6.y, -r1.y
add r0.yz, r0.xxxx, r6.xxyx
mul o10.xy, r0.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
dp3 r0.y, cb1[0].xyzx, r3.xyzx
dp3 r0.z, cb1[1].xyzx, r3.xyzx
dp3 r1.y, cb1[2].xyzx, r3.xyzx
mul r1.y, r1.y, cb9[13].z
mul r6.xyz, r0.zzzz, cb1[1].xyzx
mad r6.xyz, r0.yyyy, cb1[0].xyzx, r6.xyzx
mad r6.xyz, r1.yyyy, cb1[2].xyzx, r6.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul o4.xyz, r0.yyyy, r6.xyzx
lt r0.y, l(0.000000), cb3[2].w
if_nz r0.y
  add r6.xyz, r5.xyzx, -cb8[0].xyzx
  dp3 r0.y, r6.xyzx, r6.xyzx
  sqrt r0.y, r0.y
  div r6.xyz, r6.xyzx, r0.yyyy
  dp3 r0.z, r6.xyzx, cb6[2].xyzx
  mul r1.y, r0.z, r0.z
  mad r1.y, r1.y, l(0.059683), l(0.059683)
  mul r1.y, r1.y, l(12.000000)
  min r7.x, r1.y, l(1.000000)
  mad r1.y, -cb8[20].x, cb8[20].x, l(1.000000)
  mad r3.w, r0.z, r0.z, l(1.000000)
  mad r4.zw, cb8[20].xxxx, cb8[20].xxxx, l(0.000000, 0.000000, 2.000000, 1.000000)
  dp2 r0.z, r0.zzzz, cb8[20].xxxx
  add r0.z, -r0.z, r4.w
  log r0.z, |r0.z|
  mul r0.z, r0.z, l(1.500000)
  exp r0.z, r0.z
  div r1.y, r1.y, r4.z
  div r0.z, r3.w, r0.z
  mul r0.z, r0.z, r1.y
  mul r7.y, r0.z, l(0.119366)
  mul r0.z, r0.y, l(0.004000)
  min r0.z, r0.z, l(1.000000)
  mul r1.y, r0.z, r6.y
  mad r6.xyzw, r6.yyyy, r0.zzzz, l(-0.116000, 0.000000, 0.116000, 0.216000)
  mul_sat r8.xyzw, r6.xyzw, l(10.000000, 8.620689, 8.620689, 10.000000)
  add r9.xyz, cb8[10].xyzx, -cb8[11].xyzx
  mad r9.xyz, r8.xxxx, r9.xyzx, cb8[11].xyzx
  add r10.xyz, cb8[11].xyzx, -cb8[12].xyzx
  mad r10.xyz, r8.yyyy, r10.xyzx, cb8[12].xyzx
  add r11.xyz, cb8[12].xyzx, -cb8[13].xyzx
  mad r8.xyz, r8.zzzz, r11.xyzx, cb8[13].xyzx
  add r11.xyz, cb8[13].xyzx, -cb8[14].xyzx
  mad r11.xyz, r8.wwww, r11.xyzx, cb8[14].xyzx
  ge r12.xyz, r1.yyyy, l(-0.116000, 0.000000, 0.116000, 0.000000)
  and r0.z, r12.y, l(0x3f800000)
  movc r8.xyz, r12.xxxx, r8.xyzx, r11.xyzx
  movc r8.xyz, r12.yyyy, r10.xyzx, r8.xyzx
  movc r8.xyz, r12.zzzz, r9.xyzx, r8.xyzx
  mul_sat r4.zw, r6.yyyw, l(0.000000, 0.000000, 4.629630, 4.629630)
  add r6.xyz, cb8[16].xyzx, -cb8[17].xyzx
  mad r6.xyz, r4.zzzz, r6.xyzx, cb8[17].xyzx
  add r9.xyz, cb8[17].xyzx, -cb8[18].xyzx
  mad r9.xyz, r4.wwww, r9.xyzx, cb8[18].xyzx
  add r6.xyz, r6.xyzx, -r9.xyzx
  mad r6.xyz, r0.zzzz, r6.xyzx, r9.xyzx
  add r0.z, r5.y, -cb8[21].x
  mul r0.z, r0.z, cb8[21].y
  mul r0.z, r0.z, l(-1.442695)
  exp r7.z, r0.z
  add r9.x, r0.y, cb8[19].x
  add r9.y, r0.y, cb8[21].z
  max r0.yz, r9.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r9.xy, r0.yyyy, cb8[19].yzyy
  mul r9.z, r0.z, cb8[21].w
  mul r9.w, r0.z, cb8[22].x
  mul r9.xyzw, r9.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r9.xyzw, r9.xyzw
  add r9.xyzw, -r9.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r7.w, r7.y, r7.z
  mul r10.xyzw, r7.xyzw, r9.xyzw
  dp3 r1.y, r8.xyzx, l(0.298910, 0.586610, 0.114480, 0.000000)
  mul_sat r0.y, r0.y, cb8[19].w
  add r7.xzw, -r1.yyyy, r8.xxyz
  mad r7.xzw, r0.yyyy, r7.xxzw, r1.yyyy
  dp3 r0.y, cb8[15].xyzx, l(0.298910, 0.586610, 0.114480, 0.000000)
  mul_sat r0.z, r0.z, cb8[22].y
  add r8.xyz, -r0.yyyy, cb8[15].xyzx
  mad r8.xyz, r0.zzzz, r8.xyzx, r0.yyyy
  mul r11.xyz, r7.xzwx, r10.xxxx
  mov_sat r0.yz, r10.zzwz
  mul r8.xyz, r8.xyzx, r0.yyyy
  mul r7.xzw, r6.xxyz, r0.zzzz
  mad r6.xyz, r10.yyyy, r6.xyzx, r7.xzwx
  mov r11.w, r10.x
  mov r8.w, r10.z
  add r8.xyzw, r8.xyzw, r11.xyzw
  add o11.xyz, r6.xyzx, r8.xyzx
  add r0.y, -r8.w, l(1.000000)
  mad r0.z, -r9.y, r7.y, l(1.000000)
  max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul o11.w, r0.z, r0.y
else
  mov o11.xyzw, l(0,0,0,1.000000)
endif
mov o0.xyzw, r2.xyzw
mov o1.xyzw, v1.xyzw
mov o2.z, cb3[0].w
mov o2.xy, r4.xyxx
mov o5.zw, l(0,0,0,0)
mov o5.x, r1.x
mov o6.w, r1.z
mov o7.zw, r2.zzzw
mov o8.w, r0.w
mov o8.xyz, r5.xyzx
mov o9.w, r1.w
mov o10.w, r0.x
mov o3.xyz, r3.xyzx
ret
// Approximately 278 instruction slots used
